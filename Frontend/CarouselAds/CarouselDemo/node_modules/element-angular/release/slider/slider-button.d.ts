import { Renderer2, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { SafeStyle, DomSanitizer } from '@angular/platform-browser';
import { ElSlider } from './slider';
import * as ɵngcc0 from '@angular/core';
export declare class ElSliderButton implements OnInit, OnChanges {
    private root;
    private sanitizer;
    private renderer;
    disabled: boolean;
    elDisabled: boolean;
    model: number;
    vertical: boolean;
    formatTooltip: Function;
    min: number;
    max: number;
    modelChange: EventEmitter<any>;
    hovering: boolean;
    dragging: boolean;
    popper: boolean;
    wrapperStyles: SafeStyle;
    startY: number;
    startX: number;
    currentY: number;
    currentX: number;
    startPosition: number;
    position: number;
    globalListenFunc: Function[];
    showPopper: boolean;
    constructor(root: ElSlider, sanitizer: DomSanitizer, renderer: Renderer2);
    popperMouseHandle(t: boolean): void;
    getCurrentPosition(): number;
    updateWrapperStyle(): void;
    formatValue(): any;
    togglePopper(t: boolean): void;
    buttonDownHandle(event: Event): void;
    onDragStart(event: Event): void;
    draggingHandle(event: Event): void;
    dragEndHandle(): void;
    setPosition(next: number): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElSliderButton, [{ optional: true; }, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ElSliderButton, "el-slider-button", never, { "elDisabled": "elDisabled"; "model": "model"; "vertical": "vertical"; "min": "min"; "max": "max"; "disabled": "disabled"; "formatTooltip": "format-tooltip"; }, { "modelChange": "modelChange"; }, never, never>;
}

//# sourceMappingURL=slider-button.d.ts.map