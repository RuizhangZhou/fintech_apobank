import { EventEmitter } from '@angular/core';
import { TableSelectEvent, ElTableSlotEvent } from './table.interface';
import * as ɵngcc0 from '@angular/core';
export declare class ElTableProps {
    height: string | number;
    placeholder: string;
    stripe: boolean;
    border: boolean;
    scrollX: boolean;
    showHeader: boolean;
    center: string;
    rowClassName: (userRow: any, index: number) => string;
    model: any;
    modelChange: EventEmitter<any>;
    select: EventEmitter<TableSelectEvent>;
    selectAll: EventEmitter<TableSelectEvent>;
    selectionChange: EventEmitter<TableSelectEvent>;
    cellMouseEnter: EventEmitter<Event>;
    cellMouseLeave: EventEmitter<Event>;
    cellClick: EventEmitter<ElTableSlotEvent>;
    cellDblclick: EventEmitter<ElTableSlotEvent>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElTableProps, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ElTableProps, never, never, { "height": "height"; "placeholder": "placeholder"; "stripe": "stripe"; "border": "border"; "scrollX": "scroll-x"; "showHeader": "show-header"; "center": "center"; "model": "model"; "rowClassName": "row-class-name"; }, { "modelChange": "modelChange"; "select": "select"; "selectAll": "select-all"; "selectionChange": "selection-change"; "cellMouseEnter": "cell-mouse-enter"; "cellMouseLeave": "cell-mouse-leave"; "cellClick": "cell-click"; "cellDblclick": "cell-dblclick"; }, never>;
}

//# sourceMappingURL=table.props.d.ts.map