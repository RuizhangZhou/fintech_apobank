{"version":3,"file":"rate.d.ts","sources":["rate.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { ElRateProps } from './rate.props';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare type RateMapItem = {\n    color: string;\n    class: string;\n};\nexport declare type RateMap = {\n    low: RateMapItem;\n    high: RateMapItem;\n    medium: RateMapItem;\n    void: RateMapItem;\n    elDisabled: RateMapItem;\n};\nexport declare class ElRate extends ElRateProps implements OnInit, ControlValueAccessor {\n    private sanitizer;\n    private renderer;\n    rateIcon: ElementRef;\n    scores: boolean[];\n    rateMap: RateMap;\n    backupModel: number;\n    constructor(sanitizer: DomSanitizer, renderer: Renderer2);\n    hoverToggle({srcElement}: Event, index?: number, reset?: boolean): void;\n    selectValue(index: number): void;\n    makeIconClasses(index: number): string;\n    makeIconStyles(index: number): SafeStyle;\n    findCurrentType(index: number, rateMap: RateMap): RateMapItem;\n    ngOnInit(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    private controlChange;\n    private controlTouch;\n}\n"]}