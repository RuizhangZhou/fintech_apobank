import { EventEmitter } from '@angular/core';
import { UploadFile, Lifecycle, CommonFile, UploadResponse } from './upload.interface';
import * as ɵngcc0 from '@angular/core';
export declare class ElUploadProps {
    disabled: boolean;
    elDisabled: boolean;
    data: any;
    name: string;
    action: string;
    accept: string;
    drag: boolean;
    multiple: boolean;
    headers?: any;
    withCredentials: boolean;
    showFileList: boolean;
    listType: string;
    fileList: UploadFile[];
    preview: EventEmitter<CommonFile>;
    remove: EventEmitter<CommonFile>;
    progress: EventEmitter<UploadResponse<any>>;
    success: EventEmitter<UploadResponse<any>>;
    error: EventEmitter<UploadResponse<any>>;
    uploadFilter: (f: File) => boolean;
    protected readonly lifecycle: Lifecycle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElUploadProps, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ElUploadProps, never, never, { "elDisabled": "elDisabled"; "data": "data"; "name": "name"; "drag": "drag"; "multiple": "multiple"; "headers": "headers"; "withCredentials": "with-credentials"; "showFileList": "show-file-list"; "listType": "list-type"; "fileList": "file-list"; "uploadFilter": "upload-filter"; "disabled": "disabled"; "action": "action"; "accept": "accept"; }, { "preview": "preview"; "remove": "remove"; "progress": "progress"; "success": "success"; "error": "error"; }, never>;
}

//# sourceMappingURL=upload.props.d.ts.map