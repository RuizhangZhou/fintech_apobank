import { EventEmitter, ElementRef, OnInit } from '@angular/core';
import { ElRadioGroup } from './radio-group';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class ElRadio implements OnInit, ControlValueAccessor {
    private rootGroup;
    private el;
    disabled: boolean;
    elDisabled: boolean;
    label: string | number;
    nativeName: string;
    model: any;
    modelChange: EventEmitter<any>;
    isFocus: boolean;
    parentIsGroup: boolean;
    constructor(rootGroup: ElRadioGroup, el: ElementRef);
    changeHandle(): void;
    ngOnInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    private controlChange;
    private controlTouch;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElRadio, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ElRadio, "el-radio", never, { "elDisabled": "elDisabled"; "label": "label"; "nativeName": "name"; "disabled": "disabled"; "model": "model"; }, { "modelChange": "modelChange"; }, never, ["*"]>;
}

//# sourceMappingURL=radio.d.ts.map