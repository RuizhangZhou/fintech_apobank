import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ElContainer } from './container';
import { ElContainerDirective } from './container.directive';
import { ElHeader, ElAside, ElMain, ElFooter } from './children/index';
import { ElAsideDirective, ElFooterDirective, ElHeaderDirective, ElMainDirective } from './directives/index';
import * as ɵngcc0 from '@angular/core';
var ElContainerModule = /** @class */ (function () {
    function ElContainerModule() {
    }
    /**
     * @return {?}
     */
    ElContainerModule.forRoot = function () {
        return { ngModule: ElContainerModule, providers: [] };
    };
    /**
     * @nocollapse
     */
    ElContainerModule.ctorParameters = function () { return []; };
ElContainerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ElContainerModule });
ElContainerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ElContainerModule_Factory(t) { return new (t || ElContainerModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ElContainerModule, { declarations: function () { return [ElContainer,
        ElHeader,
        ElAside,
        ElMain,
        ElFooter,
        ElContainerDirective,
        ElHeaderDirective,
        ElMainDirective,
        ElFooterDirective,
        ElAsideDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ElContainer,
        ElHeader,
        ElAside,
        ElMain,
        ElFooter,
        ElContainerDirective,
        ElHeaderDirective,
        ElMainDirective,
        ElFooterDirective,
        ElAsideDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElContainerModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ElContainer,
                    ElHeader,
                    ElAside,
                    ElMain,
                    ElFooter,
                    ElContainerDirective,
                    ElHeaderDirective,
                    ElMainDirective,
                    ElFooterDirective,
                    ElAsideDirective,
                ],
                exports: [
                    ElContainer,
                    ElHeader,
                    ElAside,
                    ElMain,
                    ElFooter,
                    ElContainerDirective,
                    ElHeaderDirective,
                    ElMainDirective,
                    ElFooterDirective,
                    ElAsideDirective,
                ],
                imports: [CommonModule],
                entryComponents: [ElContainer]
            }]
    }], function () { return []; }, null); })();
    return ElContainerModule;
}());
export { ElContainerModule };
function ElContainerModule_tsickle_Closure_declarations() {
    /** @type {?} */
    ElContainerModule.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElContainerModule.ctorParameters;
}

//# sourceMappingURL=module.js.map