{"version":3,"file":"aside.js","sources":["../../../src/container/children/aside.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAc,MAAA,eAAA,CAAA;AAC9C,OAAO,EAAE,WAAA,EAAY,MAAA,0BAAA,CAAA;;;;;;AACrB;AACE,IAGF;AACA;AAEA,OADG;AACH,IAAA,iBACY,EAAI;AAAI,QAAR,OAAA,GAAA,EAAA,CAAI;AAAC,QANd,UAAK,GAEW,OAAA,CAAA;AACH,IAKd,CAAC;AACH,IAAA;AACA;AAEA,OADG;AACH,IAAA,0BAFG,GAEH;AAAc,QACV,OAAO,CAFC,GAAC,CAAG,0FAAC,CAA0F,CAAA;AAEtB,QACjF,WAAW,CAFC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;AAClB,IAElB,CAAC,CAQD;IATK,JASJ,IAGH;cAZO,GAAoC,jBAa3C;AAEA,OADG;AAXH,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,sBAGvB,hDAWF,IAJC,sBAAA,GAAA,cAAA,OAAA;IAPS,EAFE,UAAA,hBAUZ,QAIA,EAAC,IAAI,EAAE,UAAU,GAAG;OAXlB,PAYF,KAAC,EANA,CAMA,CAAC;KAZQ,EAFE,PAeZ,IAJO,sBAAA,GAAyD;AACF,QAI9D,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAAE,QAK5B,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAEvB,KAGF;sBAZE,mBACF,EAFC,EAAG,OAGJ;;;;;;;;;;;;;;;;;;;;oBAMC;AACF,IAIA,cAAC;AAED,CAxCA,AAsCC,IAAA;AACD,SArCC,OAAA;AAsCD;AACA,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,UAAU,CAAC;AACnB,IAAA;AACA;AACI;AAEA,OADD;AACH,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;AACxB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;AACxB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;AACrB,CAAC;AACD","sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { removeNgTag } from '../../shared/utils/index';\nexport class ElAside implements OnInit {\n  \n   width: string = '300px'\n   class: string\n/**\n * @param {?} el\n */\nconstructor(\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    console.log('Element Angular: Container Component is discarded, use [Container directive] replace it.')\n    removeNgTag(this.el.nativeElement)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-aside',\n  template: `\n    <aside [class]=\"'el-aside ' + class\" [ngStyle]=\"{width: width}\">\n      <ng-content></ng-content>\n    </aside>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'width': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction ElAside_tsickle_Closure_declarations() {\n/** @type {?} */\nElAside.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElAside.ctorParameters;\n/** @type {?} */\nElAside.propDecorators;\n/** @type {?} */\nElAside.prototype.width;\n/** @type {?} */\nElAside.prototype.class;\n/** @type {?} */\nElAside.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}