{"version":3,"file":"aside.directive.js","sources":["../../../src/container/directives/aside.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAA0B,IAAA,EAAK,MAAA,eAAA,CAAA;AACnD,OAAO,EAAE,OAAA,EAAQ,MAAA,iBAAA,CAAA;;;AACjB;AAAoD,IAIpD;AACA;AAEA,OADG;AACH,IAAA,0BACa,OAAS;AACtB,QADa,YAAA,GAAA,OAAA,CAAS;AAAC,QANpB,UAAK,GAEW,OAAA,CAAA;AACH,IAKd,CAAC;AACH,IAAA;AACA;AAEA,OADG;AACH,IAAA,sCAFG,GAEH;AAAc,QACV,IAAI,CAFC,aAAC,EAAa,CAAA;AACH,IAElB,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,mCAJG,GAIH;AAAc,QACV,IAAI,CAJC,aAAC,EAAa,CAAA;AAGtB,IAEC,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IANG,wCAAA,GAMH;AAAc,QACV,IAAI,CANC,UAAC,GAAY;AAAE,YAOlB,KAAK,EANE,IAAA,CAAK,KAAC;AAEN,SAKR,CAAA;AACL,QACI,IAAI,CANC,OAAC,CAAO,OAAC,GAAS,IAAA,CAAK,UAAC,CAAA;AACH,QAM1B,IAAI,CANC,OAAC,CAAO,SAAC,EAAS,CAAA;AAAC,IAO1B,CAAC,CAED;IANK,JAMJ,IAOH;AACA;IAdO,GAAoC,PAgB3C,OADG;SARH,EANE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,sBAOvB,zDAQF,IARC,+BAAA,GAAA,cAAA,OAAA;IAAS,EANE,YAAA,sBAOV,IAAI,EANE,EAAE,KAAA,EAAO,vDAKd,QASH,EAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;OAd9B,EAAW,TAe5B,KAAC,EAVA,CAUA,CAAC;qBARA,SAAS,EANE,CAAA,jCAeb,IARO,+BAAA,GAAyD;AAPjD,CAAO,mBAOrB,EANC,EAAG,OAOJ,/BAI+B,QAIhC,OAAO,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAIxB,KAKD;;;;;;;;;;;;;;oBARC;AAAC,IASH,uBAAC;AAED,CArDA,AAmDC,IAAA;AACD,SAlDC,gBAAA;AAmDD;AACA,IAAA,gBAAgB;AAChB,IAAA,gBAAgB,CAAC,UAAU,CAAC;AAC5B,IAAA;AACA;AACI;AAEA,OADD;AACH,IAAA,gBAAgB,CAAC,cAAc,CAAC;AAChC,IAAA,gBAAgB;AAChB,IAAA,gBAAgB,CAAC,cAAc,CAAC;AAChC,IAAA,gBAAgB;AAChB,IAAA,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC;AACjC,IAAA,gBAAgB;AAChB,IAAA,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC;AACtC,IAAA,gBAAgB;AAChB,IAAA,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC;AACnC,CAAC;AACD","sourcesContent":["import { Directive, Input, OnChanges, OnInit, Self } from '@angular/core';\nimport { NgStyle } from '@angular/common';\nexport class ElAsideDirective implements OnChanges, OnInit {\n  \n   width: string = '300px'\nprivate hostStyles: { [key: string]: string }\n/**\n * @param {?} ngStyle\n */\nconstructor(\nprivate ngStyle: NgStyle,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n    this.colletClasses()\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.colletClasses()\n  }\n/**\n * @return {?}\n */\nprivate colletClasses(): void {\n    this.hostStyles = {\n      width: this.width,\n    }\n  \n    this.ngStyle.ngStyle = this.hostStyles\n    this.ngStyle.ngDoCheck()\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[el-aside]',\n  host: { class: 'el-aside' },\n  providers: [NgStyle],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgStyle, decorators: [{ type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'width': [{ type: Input },],\n};\n}\n\nfunction ElAsideDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nElAsideDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElAsideDirective.ctorParameters;\n/** @type {?} */\nElAsideDirective.propDecorators;\n/** @type {?} */\nElAsideDirective.prototype.width;\n/** @type {?} */\nElAsideDirective.prototype.hostStyles;\n/** @type {?} */\nElAsideDirective.prototype.ngStyle;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}