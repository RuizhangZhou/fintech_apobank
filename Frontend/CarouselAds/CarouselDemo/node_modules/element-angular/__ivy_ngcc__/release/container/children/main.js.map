{"version":3,"file":"main.js","sources":["../../../src/container/children/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAc,MAAA,eAAA,CAAA;AAC9C,OAAO,EAAE,WAAA,EAAY,MAAA,yBAAA,CAAA;;;;AACrB;AACE,IAEF;AACA;AAEA,OADG;AACH,IAAA,gBACY,EAAI;AAAI,QAAR,OAAA,GAAA,EAAA,CAAI;AAAC,IACZ,CAAC;AACN,IAAA;AACA;AAEA,OADG;AACH,IAAA,yBAFG,GAEH;AAAc,QACV,OAAO,CAFC,GAAC,CAAG,0FAAC,CAA0F,CAAA;AAEtB,QACjF,WAAW,CAFC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;AAClB,IAElB,CAAC,CAQD;IATK,JASJ,IAGH;aAZO,GAAoC,hBAa3C;OAVA,PAYA,OADG;CAbD,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,sBAGvB,/CAWF,IAJC,qBAAA,GAAA,cAAA,OAAA;IAPS,EAFE,SAAA,fAUZ,QAIA,EAAC,IAAI,EAAE,UAAU,GAAG;MAXlB,NAYF,KAAC,EANA,CAMA,CAVC;IAFQ,EAFE,NAIT,IAOI,qBAAA,GAAyD;AACF,QAI9D,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAAE,KAK3B;2BAXE,mBACF,EAFC,EAAG,OAGJ;;;;;;;;;;;;;;;;;oBAKC;AAAC,IAKH,aAAC;AAED,CArCA,AAmCC,IAAA;AACD,SAlCC,MAAA;AAmCD;AACA,IAAA,gBAAgB;AAChB,IAAA,MAAM,CAAC,UAAU,CAAC;AAClB,IAAA;AACA;AACI;AAEA,OADD;AACH,IAAA,MAAM,CAAC,cAAc,CAAC;AACtB,IAAA,gBAAgB;AAChB,IAAA,MAAM,CAAC,cAAc,CAAC;AACtB,IAAA,gBAAgB;AAChB,IAAA,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;AACpB,CAAC;AACD","sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { removeNgTag } from '../../shared/utils/host';\nexport class ElMain implements OnInit {\n  \n   class: string\n/**\n * @param {?} el\n */\nconstructor(\nprivate el: ElementRef,\n  ) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n    console.log('Element Angular: Container Component is discarded, use [Container directive] replace it.')\n    removeNgTag(this.el.nativeElement)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-main',\n  template: `\n    <main [class]=\"'el-main ' + class\">\n      <ng-content></ng-content>\n    </main>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'class': [{ type: Input },],\n};\n}\n\nfunction ElMain_tsickle_Closure_declarations() {\n/** @type {?} */\nElMain.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElMain.ctorParameters;\n/** @type {?} */\nElMain.propDecorators;\n/** @type {?} */\nElMain.prototype.class;\n/** @type {?} */\nElMain.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}