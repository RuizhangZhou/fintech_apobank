import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var ElDropdownItem = /** @class */ (function () {
    function ElDropdownItem() {
        this.selected = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    ElDropdownItem.prototype.handleClick = function (event) {
        if (this.model.elDisabled)
            return;
        event.stopPropagation();
        this.selected.emit(this.model);
    };
    /**
     * @nocollapse
     */
    ElDropdownItem.ctorParameters = function () { return []; };
    ElDropdownItem.propDecorators = {
        'model': [{ type: Input },],
        'selected': [{ type: Output },],
    };
ElDropdownItem.ɵfac = function ElDropdownItem_Factory(t) { return new (t || ElDropdownItem)(); };
ElDropdownItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElDropdownItem, selectors: [["el-dropdown-item"]], inputs: { model: "model" }, outputs: { selected: "selected" }, decls: 2, vars: 5, consts: [[1, "el-dropdown-menu__item", 3, "click"]], template: function ElDropdownItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵlistener("click", function ElDropdownItem_Template_li_click_0_listener($event) { return ctx.handleClick($event); });
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("is-disabled", ctx.model.elDisabled)("el-dropdown-menu__item--divided", ctx.model.divided);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.model.label, " ");
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElDropdownItem, [{
        type: Component,
        args: [{
                selector: 'el-dropdown-item',
                template: "\n    <li class=\"el-dropdown-menu__item\"\n    [class.is-disabled]=\"model.elDisabled\"\n    [class.el-dropdown-menu__item--divided]=\"model.divided\"\n    (click)=\"handleClick($event)\">\n      {{model.label}}\n    </li>\n  "
            }]
    }], function () { return []; }, { selected: [{
            type: Output
        }], model: [{
            type: Input
        }] }); })();
    return ElDropdownItem;
}());
export { ElDropdownItem };
function ElDropdownItem_tsickle_Closure_declarations() {
    /** @type {?} */
    ElDropdownItem.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElDropdownItem.ctorParameters;
    /** @type {?} */
    ElDropdownItem.propDecorators;
    /** @type {?} */
    ElDropdownItem.prototype.model;
    /** @type {?} */
    ElDropdownItem.prototype.selected;
}

//# sourceMappingURL=dropdown.item.js.map