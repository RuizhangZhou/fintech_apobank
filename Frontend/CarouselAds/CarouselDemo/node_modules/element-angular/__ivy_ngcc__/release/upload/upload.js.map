{"version":3,"file":"upload.js","sources":["../../src/upload/upload.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, ContentChild, ElementRef, OnInit, TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpResponse } from '@angular/common/http';\nimport { ElUploadProps } from './upload.props';\nimport { ElUploadRequest } from './upload.request';\nimport { CommonFile, UploadFile } from './upload.interface';\nexport class ElUpload extends ElUploadProps implements OnInit {\n  \n   trigger: TemplateRef<any>\n   dragger: TemplateRef<any>\n   tip: TemplateRef<any>\n   input: ElementRef\n  \n  files: CommonFile[] = []\n/**\n * @return {?}\n */\nstatic generateID(): string {\n    return Math.random().toString(16).substr(2, 8)\n  }\n/**\n * @param {?} response\n * @return {?}\n */\nstatic updatePercentage(response: any): number {\n    const { loaded, total } = response\n    if (loaded === undefined || !total) return 0\n    return Math.round(loaded / total * 100)\n  }\n/**\n * @param {?} request\n * @param {?} sanitizer\n */\nconstructor(\nprivate request: ElUploadRequest,\nprivate sanitizer: DomSanitizer,\n  ) {\n    super()\n  }\n/**\n * @return {?}\n */\nclickHandle(): void {\n    if (this.elDisabled) return\n    this.input.nativeElement.click()\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nchangeHandle(event: Event): void {\n    const /** @type {?} */ files: FileList = ( /** @type {?} */((<HTMLInputElement>event.target))).files\n    if (!files || !files.length) return\n    const /** @type {?} */ checkedFiles: File[] = this.multiple ? Array.from(files) : [files[0]]\n    this.input.nativeElement.value = null\n    checkedFiles.forEach((file: File) => {\n      const /** @type {?} */ next = {\n        id: ElUpload.generateID(),\n        name: file.name,\n        status: 'ready',\n        size: file.size,\n        percentage: 0,\n        raw: file,\n        url: this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file))\n      }\n      this.files.push(next)\n      this.updateFile(next)\n      this.uploadFilter(file) === false ? this.removeHandle(next) : this.upload(next)\n    })\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nupload(file: CommonFile): void {\n    file.status = 'uploading'\n    this.updateFile(file)\n    this.request.upload(this.action, file.raw)\n      .subscribe((event: any) => {\n        file.percentage = ElUpload.updatePercentage(event)\n        file.percentage && this.lifecycle.progress(file, file.percentage)\n        if (event instanceof HttpResponse) {\n          this.lifecycle.success(Object.assign(file, { status: 'success' }), event)\n        }\n        this.updateFile(file)\n      }, err => {\n        file.status = 'fail'\n        this.lifecycle.error(file, err)\n        this.removeHandle(file)\n      })\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nremoveHandle(file: CommonFile): void {\n    this.lifecycle.remove(file)\n    const /** @type {?} */ index = this.files.findIndex(({ id }) => file.id === id)\n    this.files.splice(index, 1)\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nupdateFile(file: CommonFile): void {\n    const /** @type {?} */ index = this.files.findIndex(({ id }) => file.id === id)\n    if (!index) return\n    this.files[index] = file\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.request\n      .setHeader(this.headers)\n      .setCredentials(this.withCredentials)\n      .setFileName(this.name)\n      .addExtraData(this.data)\n    this.fileList.forEach((file: UploadFile) => {\n      this.files.push({\n        id: ElUpload.generateID(),\n        name: file.name,\n        status: 'success',\n        raw: null, size: null,\n        url: this.sanitizer.bypassSecurityTrustUrl(file.url),\n      })\n    })\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-upload',\n  template: `\n    <ng-template #uploadList>\n      <el-upload-list [files]=\"files\"  *ngIf=\"showFileList\"\n        [list-type]=\"listType\" [elDisabled]=\"elDisabled\"\n        (remove)=\"removeHandle($event)\" (preview)=\"lifecycle.preview($event)\">\n      </el-upload-list>\n    </ng-template>\n    \n    <ng-template #triggerBlock>\n      <div [class]=\"'el-upload el-upload--' + listType\" (click)=\"clickHandle()\">\n        <el-button *ngIf=\"!trigger\" size=\"small\" type=\"primary\">点击上传</el-button>\n        <ng-container *ngIf=\"trigger\">\n          <ng-template [ngTemplateOutlet]=\"trigger\"></ng-template>\n        </ng-container>\n        <input class=\"el-upload__input\" type=\"file\" name=\"file\" #input\n          [accept]=\"accept\" [name]=\"name\" [multiple]=\"multiple\"\n          (change)=\"changeHandle($event)\">\n      </div>\n    </ng-template>\n    \n    <el-upload-dragger *ngIf=\"drag\" [elDisabled]=\"elDisabled\" (change)=\"changeHandle($event)\">\n      <ng-template [ngTemplateOutlet]=\"triggerBlock\"></ng-template>\n    </el-upload-dragger>\n    \n    <ng-container *ngIf=\"listType === 'picture-card'\">\n      <ng-template [ngTemplateOutlet]=\"uploadList\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"!drag\">\n      <ng-template [ngTemplateOutlet]=\"triggerBlock\"></ng-template>\n    </ng-container>\n    \n    <ng-container *ngIf=\"tip\">\n      <ng-template [ngTemplateOutlet]=\"tip\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"listType !== 'picture-card'\">\n      <ng-template [ngTemplateOutlet]=\"uploadList\"></ng-template>\n    </ng-container>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElUploadRequest, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: ContentChild, args: ['trigger', ] },],\n'dragger': [{ type: ContentChild, args: ['dragger', ] },],\n'tip': [{ type: ContentChild, args: ['tip', ] },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n};\n}\n\nfunction ElUpload_tsickle_Closure_declarations() {\n/** @type {?} */\nElUpload.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElUpload.ctorParameters;\n/** @type {?} */\nElUpload.propDecorators;\n/** @type {?} */\nElUpload.prototype.trigger;\n/** @type {?} */\nElUpload.prototype.dragger;\n/** @type {?} */\nElUpload.prototype.tip;\n/** @type {?} */\nElUpload.prototype.input;\n/** @type {?} */\nElUpload.prototype.files;\n/** @type {?} */\nElUpload.prototype.request;\n/** @type {?} */\nElUpload.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}