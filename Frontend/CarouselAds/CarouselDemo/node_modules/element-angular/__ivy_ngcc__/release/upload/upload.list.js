import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../progress/progress';

function ElUploadList_li_1_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 8);
} if (rf & 2) {
    var file_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", file_r1.url, ɵngcc0.ɵɵsanitizeUrl);
} }
function ElUploadList_li_1_i_7_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 9);
    ɵngcc0.ɵɵlistener("click", function ElUploadList_li_1_i_7_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var file_r1 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.removeHandle(file_r1); });
    ɵngcc0.ɵɵelementEnd();
} }
function ElUploadList_li_1_el_progress_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "el-progress", 10);
} if (rf & 2) {
    var file_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("type", ctx_r5.listType === "picture-card" ? "circle" : "line")("stroke-width", ctx_r5.listType === "picture-card" ? 6 : 2)("percentage", file_r1.percentage);
} }
function ElUploadList_li_1_span_9_span_1_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 14);
    ɵngcc0.ɵɵlistener("click", function ElUploadList_li_1_span_9_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); var file_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.previewHandle(file_r1); });
    ɵngcc0.ɵɵelement(1, "i", 15);
    ɵngcc0.ɵɵelementEnd();
} }
function ElUploadList_li_1_span_9_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 16);
    ɵngcc0.ɵɵlistener("click", function ElUploadList_li_1_span_9_span_2_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var file_r1 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.removeHandle(file_r1); });
    ɵngcc0.ɵɵelement(1, "i", 17);
    ɵngcc0.ɵɵelementEnd();
} }
function ElUploadList_li_1_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 11);
    ɵngcc0.ɵɵtemplate(1, ElUploadList_li_1_span_9_span_1_Template, 2, 0, "span", 12);
    ɵngcc0.ɵɵtemplate(2, ElUploadList_li_1_span_9_span_2_Template, 2, 0, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.listType === "picture-card");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.elDisabled);
} }
var _c0 = function () { return ["picture-card", "picture"]; };
function ElUploadList_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtemplate(1, ElUploadList_li_1_img_1_Template, 1, 1, "img", 1);
    ɵngcc0.ɵɵelementStart(2, "a", 2);
    ɵngcc0.ɵɵlistener("click", function ElUploadList_li_1_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r21); var file_r1 = ctx.$implicit; var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.clickHandle(file_r1); });
    ɵngcc0.ɵɵelement(3, "i", 3);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "label", 4);
    ɵngcc0.ɵɵelement(6, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, ElUploadList_li_1_i_7_Template, 1, 0, "i", 5);
    ɵngcc0.ɵɵtemplate(8, ElUploadList_li_1_el_progress_8_Template, 1, 3, "el-progress", 6);
    ɵngcc0.ɵɵtemplate(9, ElUploadList_li_1_span_9_Template, 3, 2, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var file_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap("el-upload-list__item is-" + file_r1.status);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", file_r1.status !== "uploading" && ɵngcc0.ɵɵpureFunction0(13, _c0).indexOf(ctx_r0.listType) > -1);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", file_r1.name, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("el-icon-check", ɵngcc0.ɵɵpureFunction0(14, _c0).indexOf(ctx_r0.listType) > -1)("el-icon-circle-check", ctx_r0.listType === "text")("el-icon-upload-success", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.elDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", file_r1.status === "uploading");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.listType === "picture-card");
} }
var ElUploadList = /** @class */ (function () {
    function ElUploadList() {
        this.files = [];
        this.elDisabled = false;
        this.remove = new EventEmitter();
        this.preview = new EventEmitter();
    }
    /**
     * @param {?} file
     * @return {?}
     */
    ElUploadList.prototype.clickHandle = function (file) {
    };
    /**
     * @param {?} file
     * @return {?}
     */
    ElUploadList.prototype.removeHandle = function (file) {
        this.remove.emit(file);
    };
    /**
     * @param {?} file
     * @return {?}
     */
    ElUploadList.prototype.previewHandle = function (file) {
        this.preview.emit(file);
    };
    /**
     * @nocollapse
     */
    ElUploadList.ctorParameters = function () { return []; };
    ElUploadList.propDecorators = {
        'files': [{ type: Input },],
        'elDisabled': [{ type: Input },],
        'listType': [{ type: Input, args: ['list-type',] },],
        'remove': [{ type: Output },],
        'preview': [{ type: Output },],
    };
ElUploadList.ɵfac = function ElUploadList_Factory(t) { return new (t || ElUploadList)(); };
ElUploadList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElUploadList, selectors: [["el-upload-list"]], inputs: { files: "files", elDisabled: "elDisabled", listType: ["list-type", "listType"] }, outputs: { remove: "remove", preview: "preview" }, decls: 2, vars: 5, consts: [[3, "class", 4, "ngFor", "ngForOf"], ["class", "el-upload-list__item-thumbnail", 3, "src", 4, "ngIf"], [1, "el-upload-list__item-name", 3, "click"], [1, "el-icon-document"], [1, "el-upload-list__item-status-label"], ["class", "el-icon-close", 3, "click", 4, "ngIf"], [3, "type", "stroke-width", "percentage", 4, "ngIf"], ["class", "el-upload-list__item-actions", 4, "ngIf"], [1, "el-upload-list__item-thumbnail", 3, "src"], [1, "el-icon-close", 3, "click"], [3, "type", "stroke-width", "percentage"], [1, "el-upload-list__item-actions"], ["class", "el-upload-list__item-preview", 3, "click", 4, "ngIf"], ["class", "el-upload-list__item-delete", 3, "click", 4, "ngIf"], [1, "el-upload-list__item-preview", 3, "click"], [1, "el-icon-view"], [1, "el-upload-list__item-delete", 3, "click"], [1, "el-icon-delete2"]], template: function ElUploadList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul");
        ɵngcc0.ɵɵtemplate(1, ElUploadList_li_1_Template, 10, 15, "li", 0);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap("el-upload-list el-upload-list--" + ctx.listType);
        ɵngcc0.ɵɵclassProp("is-disabled", ctx.elDisabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.files);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc2.Elprogress], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElUploadList, [{
        type: Component,
        args: [{
                selector: 'el-upload-list',
                template: "\n    <ul [class]=\"'el-upload-list el-upload-list--' + listType\"\n      [class.is-disabled]=\"elDisabled\">\n      <li *ngFor=\"let file of files; let i = index\"\n        [class]=\"'el-upload-list__item is-' + file.status\">\n        <img class=\"el-upload-list__item-thumbnail\"\n          *ngIf=\"file.status !== 'uploading' && ['picture-card', 'picture'].indexOf(listType) > -1\"\n          [src]=\"file.url\">\n        <a class=\"el-upload-list__item-name\" (click)=\"clickHandle(file)\">\n          <i class=\"el-icon-document\"></i>\n          {{file.name}}\n        </a>\n        <label class=\"el-upload-list__item-status-label\">\n          <i [class.el-icon-check]=\"['picture-card', 'picture'].indexOf(listType) > -1\"\n            [class.el-icon-circle-check]=\"listType === 'text'\"\n            [class.el-icon-upload-success]=\"true\"></i>\n        </label>\n        <i class=\"el-icon-close\" *ngIf=\"!elDisabled\" (click)=\"removeHandle(file)\"></i>\n        <el-progress *ngIf=\"file.status === 'uploading'\"\n          [type]=\"listType === 'picture-card' ? 'circle' : 'line'\"\n          [stroke-width]=\"listType === 'picture-card' ? 6 : 2\"\n          [percentage]=\"file.percentage\">\n        </el-progress>\n        <span class=\"el-upload-list__item-actions\" *ngIf=\"listType === 'picture-card'\">\n        <span class=\"el-upload-list__item-preview\"\n          *ngIf=\"listType === 'picture-card'\"\n          (click)=\"previewHandle(file)\">\n          <i class=\"el-icon-view\"></i>\n        </span>\n        <span class=\"el-upload-list__item-delete\"\n          *ngIf=\"!elDisabled\"\n          (click)=\"removeHandle(file)\">\n          <i class=\"el-icon-delete2\"></i>\n        </span>\n      </span>\n      </li>\n    </ul>\n  "
            }]
    }], function () { return []; }, { files: [{
            type: Input
        }], elDisabled: [{
            type: Input
        }], remove: [{
            type: Output
        }], preview: [{
            type: Output
        }], listType: [{
            type: Input,
            args: ['list-type']
        }] }); })();
    return ElUploadList;
}());
export { ElUploadList };
function ElUploadList_tsickle_Closure_declarations() {
    /** @type {?} */
    ElUploadList.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElUploadList.ctorParameters;
    /** @type {?} */
    ElUploadList.propDecorators;
    /** @type {?} */
    ElUploadList.prototype.files;
    /** @type {?} */
    ElUploadList.prototype.elDisabled;
    /** @type {?} */
    ElUploadList.prototype.listType;
    /** @type {?} */
    ElUploadList.prototype.remove;
    /** @type {?} */
    ElUploadList.prototype.preview;
}

//# sourceMappingURL=upload.list.js.map