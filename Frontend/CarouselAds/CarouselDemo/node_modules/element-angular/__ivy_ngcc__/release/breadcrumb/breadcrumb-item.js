import { Component, Input, Optional, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { ElBreadcrumb } from './breadcrumb';
import { Router } from '@angular/router';
import { removeNgTag } from '../shared/utils/index';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './breadcrumb';
import * as ɵngcc2 from '@angular/router';
import * as ɵngcc3 from '@angular/common';

function ElBreadcrumbItem_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i");
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap("el-breadcrumb__separator " + ctx_r0.root.separatorClass);
} }
function ElBreadcrumbItem_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.root.separator);
} }
var _c0 = ["*"];
var ElBreadcrumbItem = /** @class */ (function () {
    /**
     * @param {?} root
     * @param {?} router
     * @param {?} el
     */
    function ElBreadcrumbItem(root, router, el) {
        this.root = root;
        this.router = router;
        this.el = el;
        this.prevent = false;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    ElBreadcrumbItem.prototype.clickHandle = function (event) {
        event.stopPropagation();
        this.root.itemHandle(this.to);
        if (!this.to || this.root.prevent || this.prevent)
            return;
        return this.router.navigateByUrl(this.to, this.extras);
    };
    /**
     * @return {?}
     */
    ElBreadcrumbItem.prototype.ngOnInit = function () {
        removeNgTag(this.el.nativeElement);
    };
    /**
     * @nocollapse
     */
    ElBreadcrumbItem.ctorParameters = function () { return [
        { type: ElBreadcrumb, decorators: [{ type: Optional },] },
        { type: Router, },
        { type: ElementRef, },
    ]; };
    ElBreadcrumbItem.propDecorators = {
        'to': [{ type: Input },],
        'prevent': [{ type: Input },],
        'extras': [{ type: Input },],
    };
ElBreadcrumbItem.ɵfac = function ElBreadcrumbItem_Factory(t) { return new (t || ElBreadcrumbItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ElBreadcrumb, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ElBreadcrumbItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElBreadcrumbItem, selectors: [["el-breadcrumb-item"]], inputs: { prevent: "prevent", to: "to", extras: "extras" }, ngContentSelectors: _c0, decls: 5, vars: 2, consts: [[1, "el-breadcrumb__item"], ["ref", "link", "role", "link", 1, "el-breadcrumb__inner", 3, "click"], [3, "class", 4, "ngIf"], ["class", "el-breadcrumb__separator", 4, "ngIf"], [1, "el-breadcrumb__separator"]], template: function ElBreadcrumbItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵlistener("click", function ElBreadcrumbItem_Template_span_click_1_listener($event) { return ctx.clickHandle($event); });
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ElBreadcrumbItem_i_3_Template, 1, 2, "i", 2);
        ɵngcc0.ɵɵtemplate(4, ElBreadcrumbItem_span_4_Template, 2, 1, "span", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.root.separatorClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.root.separatorClass);
    } }, directives: [ɵngcc3.NgIf], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElBreadcrumbItem, [{
        type: Component,
        args: [{
                selector: 'el-breadcrumb-item',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: "\n    <span class=\"el-breadcrumb__item\">\n      <span class=\"el-breadcrumb__inner\" (click)=\"clickHandle($event)\" ref=\"link\" role=\"link\">\n        <ng-content></ng-content>\n      </span>\n      <i *ngIf=\"root.separatorClass\" [class]=\"'el-breadcrumb__separator ' + root.separatorClass\"></i>\n      <span *ngIf=\"!root.separatorClass\" class=\"el-breadcrumb__separator\">{{root.separator}}</span>\n    </span>\n  "
            }]
    }], function () { return [{ type: ɵngcc1.ElBreadcrumb, decorators: [{
                type: Optional
            }] }, { type: ɵngcc2.Router }, { type: ɵngcc0.ElementRef }]; }, { prevent: [{
            type: Input
        }], to: [{
            type: Input
        }], extras: [{
            type: Input
        }] }); })();
    return ElBreadcrumbItem;
}());
export { ElBreadcrumbItem };
function ElBreadcrumbItem_tsickle_Closure_declarations() {
    /** @type {?} */
    ElBreadcrumbItem.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElBreadcrumbItem.ctorParameters;
    /** @type {?} */
    ElBreadcrumbItem.propDecorators;
    /** @type {?} */
    ElBreadcrumbItem.prototype.to;
    /** @type {?} */
    ElBreadcrumbItem.prototype.prevent;
    /** @type {?} */
    ElBreadcrumbItem.prototype.extras;
    /** @type {?} */
    ElBreadcrumbItem.prototype.root;
    /** @type {?} */
    ElBreadcrumbItem.prototype.router;
    /** @type {?} */
    ElBreadcrumbItem.prototype.el;
}

//# sourceMappingURL=breadcrumb-item.js.map