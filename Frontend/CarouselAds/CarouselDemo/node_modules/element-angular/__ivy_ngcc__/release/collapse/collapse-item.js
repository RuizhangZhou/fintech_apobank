import { Component, ContentChild, Input, Optional } from '@angular/core';
import { ElCollapse } from './collapse';
import { dropAnimation } from '../shared/animation/index';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './collapse';
import * as ɵngcc2 from '@angular/common';

var _c0 = ["label"];
function ElCollapseItem_ng_container_4_ng_template_1_Template(rf, ctx) { }
function ElCollapseItem_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ElCollapseItem_ng_container_4_ng_template_1_Template, 0, 0, "ng-template", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.labelTmp);
} }
function ElCollapseItem_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.label);
} }
var _c1 = function (a0) { return { "border-width": a0 }; };
var _c2 = ["*"];
var ElCollapseItem = /** @class */ (function () {
    /**
     * @param {?} root
     */
    function ElCollapseItem(root) {
        this.root = root;
        this.value = null;
        this.isActive = false;
    }
    /**
     * @return {?}
     */
    ElCollapseItem.prototype.updateActiveStatus = function () {
        var _this = this;
        this.isActive = this.root.modelValue.some(function (val) { return val === _this.value; });
    };
    /**
     * @return {?}
     */
    ElCollapseItem.prototype.clickHandle = function () {
        if (this.value === null) {
            this.value = Math.random().toString(16).substr(2, 8);
        }
        this.root.updateModel(this.value);
    };
    /**
     * @return {?}
     */
    ElCollapseItem.prototype.ngOnInit = function () {
        var _this = this;
        var /** @type {?} */ updateHandle = function () { return _this.updateActiveStatus(); };
        this.root.subscriber.push(updateHandle);
    };
    /**
     * @nocollapse
     */
    ElCollapseItem.ctorParameters = function () { return [
        { type: ElCollapse, decorators: [{ type: Optional },] },
    ]; };
    ElCollapseItem.propDecorators = {
        'labelTmp': [{ type: ContentChild, args: ['label',] },],
        'label': [{ type: Input },],
        'value': [{ type: Input },],
    };
ElCollapseItem.ɵfac = function ElCollapseItem_Factory(t) { return new (t || ElCollapseItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ElCollapse, 8)); };
ElCollapseItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElCollapseItem, selectors: [["el-collapse-item"]], contentQueries: function ElCollapseItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelTmp = _t.first);
    } }, inputs: { value: "value", label: "label" }, ngContentSelectors: _c2, decls: 9, vars: 9, consts: [[1, "el-collapse-item", "el-collapse-item-fix-border"], ["role", "tab"], ["role", "button", 1, "el-collapse-item__header", 3, "click"], [1, "el-collapse-item__arrow", "el-icon-arrow-right"], [4, "ngIf"], [1, "el-collapse-item__wrap", 3, "ngStyle"], [1, "el-collapse-item__content"], [3, "ngTemplateOutlet"]], template: function ElCollapseItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("click", function ElCollapseItem_Template_div_click_2_listener() { return ctx.clickHandle(); });
        ɵngcc0.ɵɵelement(3, "i", 3);
        ɵngcc0.ɵɵtemplate(4, ElCollapseItem_ng_container_4_Template, 2, 1, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(5, ElCollapseItem_ng_container_5_Template, 2, 1, "ng-container", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵelementStart(7, "div", 6);
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("is-active", ctx.isActive);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("aria-expanded", ctx.isActive);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labelTmp);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.labelTmp);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(7, _c1, ctx.isActive ? "1px" : "0"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("@dropAnimation", ctx.isActive);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgStyle, ɵngcc2.NgTemplateOutlet], styles: [".el-collapse-item-fix-border[_ngcontent-%COMP%]:last-child { margin-bottom: 0; }"], data: { animation: [dropAnimation] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElCollapseItem, [{
        type: Component,
        args: [{
                selector: 'el-collapse-item',
                animations: [dropAnimation],
                styles: [".el-collapse-item-fix-border:last-child { margin-bottom: 0; }"],
                template: "\n    <div class=\"el-collapse-item el-collapse-item-fix-border\" [class.is-active]=\"isActive\">\n      <div role=\"tab\" [attr.aria-expanded]=\"isActive\">\n        <div class=\"el-collapse-item__header\" (click)=\"clickHandle()\" role=\"button\">\n          <i class=\"el-collapse-item__arrow el-icon-arrow-right\"></i>\n          <ng-container *ngIf=\"labelTmp\">\n            <ng-template [ngTemplateOutlet]=\"labelTmp\">\n            </ng-template>\n          </ng-container>\n          <ng-container *ngIf=\"!labelTmp\">{{label}}</ng-container>\n        </div>\n      </div>\n      \n      <div class=\"el-collapse-item__wrap\" [ngStyle]=\"{'border-width': isActive ? '1px' : '0'}\">\n        <div class=\"el-collapse-item__content\" [@dropAnimation]=\"isActive\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  "
            }]
    }], function () { return [{ type: ɵngcc1.ElCollapse, decorators: [{
                type: Optional
            }] }]; }, { value: [{
            type: Input
        }], labelTmp: [{
            type: ContentChild,
            args: ['label']
        }], label: [{
            type: Input
        }] }); })();
    return ElCollapseItem;
}());
export { ElCollapseItem };
function ElCollapseItem_tsickle_Closure_declarations() {
    /** @type {?} */
    ElCollapseItem.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElCollapseItem.ctorParameters;
    /** @type {?} */
    ElCollapseItem.propDecorators;
    /** @type {?} */
    ElCollapseItem.prototype.labelTmp;
    /** @type {?} */
    ElCollapseItem.prototype.label;
    /** @type {?} */
    ElCollapseItem.prototype.value;
    /** @type {?} */
    ElCollapseItem.prototype.isActive;
    /** @type {?} */
    ElCollapseItem.prototype.root;
}

//# sourceMappingURL=collapse-item.js.map