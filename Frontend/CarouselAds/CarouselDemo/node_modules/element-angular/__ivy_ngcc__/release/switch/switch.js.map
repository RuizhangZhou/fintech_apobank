{"version":3,"file":"switch.js","sources":["../../src/switch/switch.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nexport class ElSwitch implements OnInit, ControlValueAccessor {\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\n   name: string\n   width: number\n   activeIconClass: string\n   inactiveIconClass: string\n   activeText: string\n   inactiveText: string\n   activeColor: string = '#409EFF'\n   inactiveColor: string = '#C0CCDA'\n/**\n * @param {?} val\n * @return {?}\n */\nset model(val: boolean) {\n    this._model = val\n    this.updateStyles()\n  }\n   modelChange: EventEmitter<any> = new EventEmitter<any>()\n  \n  _model: boolean = false\n  hasText: boolean = false\n  realWidth: number\n  coreStyles: SafeStyle\n  iconTransform: SafeStyle\n/**\n * @param {?} sanitizer\n */\nconstructor(\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @param {?} nextValue\n * @return {?}\n */\nchangeHandle(nextValue: boolean): void {\n    this.model = nextValue\n    this.modelChange.emit(nextValue)\n    this.controlChange(nextValue)\n  }\n/**\n * @return {?}\n */\nupdateStyles(): void {\n    let /** @type {?} */ baseStyle = `width: ${this.realWidth}px;`\n    const /** @type {?} */ translate = this._model ? `translate3d(${this.realWidth - 20}px, 0, 0)` : ''\n    const /** @type {?} */ color = this._model ? this.activeColor : this.inactiveColor;\n    const /** @type {?} */ colorStyles = `border-color: ${color}; background-color: ${color};`\n    \n    this.iconTransform = this.sanitizer.bypassSecurityTrustStyle(`transform: ${translate}`)\n    if (this.activeColor && this.inactiveColor) {\n      baseStyle += colorStyles\n    }\n    this.coreStyles = this.sanitizer.bypassSecurityTrustStyle(baseStyle)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.realWidth = this.width ? this.width : 40\n    this.updateStyles()\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.model = value\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.controlChange = fn\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.controlTouch = fn\n  }\nprivate controlChange: Function = () => {}\nprivate controlTouch: Function = () => {}\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-switch',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ElSwitch),\n    multi: true\n  }],\n  template: `\n    <label class=\"el-switch\"\n      [class.is-disabled]=\"elDisabled\"\n      [class.el-switch--wide]=\"hasText\"\n      [class.is-checked]=\"_model\">\n      <div class=\"el-switch__mask\" *ngIf=\"elDisabled\"></div>\n      <input class=\"el-switch__input\" type=\"checkbox\"\n        [name]=\"name\" [disabled]=\"elDisabled\"\n        [ngModel]=\"_model\" (ngModelChange)=\"changeHandle($event)\">\n      \n      <div class=\"el-switch__label el-switch__label--left\" [class.is-active]=\"!_model\"\n        *ngIf=\"inactiveText || inactiveIconClass\">\n        <i [class]=\"inactiveIconClass\" *ngIf=\"inactiveIconClass\"></i>\n        <span *ngIf=\"!inactiveIconClass\">{{ inactiveText }}</span>\n      </div>\n\n      <span class=\"el-switch__core\" [style]=\"coreStyles\">\n        <span class=\"el-switch__button\" [style]=\"iconTransform\"></span>\n      </span>\n\n      <div class=\"el-switch__label el-switch__label--right\" [class.is-active]=\"_model\"\n           *ngIf=\"activeText || activeIconClass\">\n        <i [class]=\"activeIconClass\" *ngIf=\"activeIconClass\"></i>\n        <span *ngIf=\"!activeIconClass\">{{ activeText }}</span>\n      </div>\n    </label>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n'name': [{ type: Input },],\n'width': [{ type: Input },],\n'activeIconClass': [{ type: Input, args: ['active-icon-class', ] },],\n'inactiveIconClass': [{ type: Input, args: ['inactive-icon-class', ] },],\n'activeText': [{ type: Input, args: ['active-text', ] },],\n'inactiveText': [{ type: Input, args: ['inactive-text', ] },],\n'activeColor': [{ type: Input, args: ['active-color', ] },],\n'inactiveColor': [{ type: Input, args: ['inactive-color', ] },],\n'model': [{ type: Input },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nElSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElSwitch.ctorParameters;\n/** @type {?} */\nElSwitch.propDecorators;\n/** @type {?} */\nElSwitch.prototype.elDisabled;\n/** @type {?} */\nElSwitch.prototype.name;\n/** @type {?} */\nElSwitch.prototype.width;\n/** @type {?} */\nElSwitch.prototype.activeIconClass;\n/** @type {?} */\nElSwitch.prototype.inactiveIconClass;\n/** @type {?} */\nElSwitch.prototype.activeText;\n/** @type {?} */\nElSwitch.prototype.inactiveText;\n/** @type {?} */\nElSwitch.prototype.activeColor;\n/** @type {?} */\nElSwitch.prototype.inactiveColor;\n/** @type {?} */\nElSwitch.prototype.modelChange;\n/** @type {?} */\nElSwitch.prototype._model;\n/** @type {?} */\nElSwitch.prototype.hasText;\n/** @type {?} */\nElSwitch.prototype.realWidth;\n/** @type {?} */\nElSwitch.prototype.coreStyles;\n/** @type {?} */\nElSwitch.prototype.iconTransform;\n/** @type {?} */\nElSwitch.prototype.controlChange;\n/** @type {?} */\nElSwitch.prototype.controlTouch;\n/** @type {?} */\nElSwitch.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}