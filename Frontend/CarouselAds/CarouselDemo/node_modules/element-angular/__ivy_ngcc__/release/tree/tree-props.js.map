{"version":3,"file":"tree-props.js","sources":["../../src/tree/tree-props.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAA,eAAA,CAAA;;AAmBrC;AAEiB,IAFjB;AAAyB,QAKtB,gBAAW,GACmC,IAAI,YAAA,EAA8B,CAAA;AAG7D,QAFnB,cAAS,GACW,EAAA,CAAA;AAAC,QAArB,iBAAY,GACY,KAAA,CAAA;AAAC,QAAzB,qBAAgB,GACY,KAAA,CAAA;AAAC,QAA7B,wBAAmB,GAC2B,EAAA,CAAA;AAAC,QAA/C,uBAAkB,GAC2B,EAAA,CAAA;AACpC,QADT,sBAAiB,GACY,IAAA,CAAA;AACtB,QADP,WAAM,GACW,EAAA,CAAA;AAAC,QAAlB,cAAS,GACY,KAAA,CAAA;AAErB,QAKA,eAAU,GAFY,KAAA,CAAA;AAAC,IAgB1B,CAAC;AACD,IAlBA,sBAFI,iCAAA;AAAI,QAFR;AACA;AACQ;AAEI,WADT;AACH,aAAA,UAFI,GAAA;AAAI,YAGJ,OAAO,CAFC,IAAC,CAAI,wEAAC,CAAwE,CAAA;AAEzD,QAC/B,CAAC;AACF;AAA0B;AACJ,OAFpB;AACH,IADO,0BAAA,GAAyD;AAEjC,QAC/B,aAAa,EAFE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;AAC7B,QAEJ,WAAW,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,YAAE,EAAY,EAAG,EAAE;AAAE,QAGxD,cAAc,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,eAAE,EAAe,EAAG,EAAE;AAClC,QAE1B,kBAAkB,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,oBAAE,EAAoB,EAAG,EAAE;AACvD,QAEd,qBAAqB,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,uBAAE,EAAuB,EAAG,EAAE;AAC7D,QAEd,oBAAoB,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,sBAAE,EAAsB,EAAG,EAAE;AACtE,QAEH,mBAAmB,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,sBAAE,EAAsB,EAAG,EAAE;AAAE,QAG1E,QAAQ,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAAE,QAG7B,WAAW,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAAE,QAGhC,UAAU,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAC5B,QAED,YAbE,EAWY,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAC/B,KAEC;;;AAFC;AAAC,IAGH,kBAAC;AAED,CAtCA,AAoCC,IAAA;AACD,SApCC,WAAA;AAqCD;AACA,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,cAAc,CAAC;AAC3B,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC;AACjC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC;AAClC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC;AAChC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC;AACnC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACvC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,mBAAmB,CAAC;AAC1C,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,kBAAkB,CAAC;AACzC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC;AACxC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;AAC7B,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC;AAChC,IAAA,gBAAgB;AAChB,IAAA,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC;AACjC,CAAC;AACD","sourcesContent":["import { EventEmitter, Input, Output } from '@angular/core';\nimport { ModelStandard } from './utils';\n\nexport type ElTreeModelData = {\n  label: string,\n  checked?: boolean,\n  expanded?: boolean,\n  _level?: number,\n  _indeterminate?: boolean,\n  id?: number | string,\n  children?: ElTreeModelData[],\n}\n\nexport type ElTreeModelEvent = {\n  label: string,\n  treeNodeID: string | number,\n  action: string,     // close, open, click, checkbox\n  checked: boolean,\n}\nexport class ElTreeProps {\n  \n  identModel: ElTreeModelData[]\n  \n  \n   modelChange: EventEmitter<ElTreeModelEvent> = new EventEmitter<ElTreeModelEvent>()\n  \n   emptyText: string = ''\n   showCheckbox: boolean = false\n   defaultExpandAll: boolean = false\n   defaultExpandedKeys: Array<string | number> = []\n   defaultCheckedKeys: Array<string | number> = []\n   expandOnClickNode: boolean = true\n   indent: number = 16\n   accordion: boolean = false\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'modelChange': [{ type: Output },],\n'emptyText': [{ type: Input, args: ['empty-text', ] },],\n'showCheckbox': [{ type: Input, args: ['show-checkbox', ] },],\n'defaultExpandAll': [{ type: Input, args: ['default-expand-all', ] },],\n'defaultExpandedKeys': [{ type: Input, args: ['default-expanded-keys', ] },],\n'defaultCheckedKeys': [{ type: Input, args: ['default-checked-keys', ] },],\n'expandOnClickNode': [{ type: Input, args: ['expand-on-click-node', ] },],\n'indent': [{ type: Input },],\n'accordion': [{ type: Input },],\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n};\n}\n\nfunction ElTreeProps_tsickle_Closure_declarations() {\n/** @type {?} */\nElTreeProps.propDecorators;\n/** @type {?} */\nElTreeProps.prototype.identModel;\n/** @type {?} */\nElTreeProps.prototype.modelChange;\n/** @type {?} */\nElTreeProps.prototype.emptyText;\n/** @type {?} */\nElTreeProps.prototype.showCheckbox;\n/** @type {?} */\nElTreeProps.prototype.defaultExpandAll;\n/** @type {?} */\nElTreeProps.prototype.defaultExpandedKeys;\n/** @type {?} */\nElTreeProps.prototype.defaultCheckedKeys;\n/** @type {?} */\nElTreeProps.prototype.expandOnClickNode;\n/** @type {?} */\nElTreeProps.prototype.indent;\n/** @type {?} */\nElTreeProps.prototype.accordion;\n/** @type {?} */\nElTreeProps.prototype.elDisabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}