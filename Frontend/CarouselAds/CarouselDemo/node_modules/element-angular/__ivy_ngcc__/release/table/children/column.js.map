{"version":3,"file":"column.js","sources":["../../../src/table/children/column.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ContentChild, ElementRef, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ElTable } from '../table';\nimport { TableColumn } from '../table.interface';\nexport class ElTableColumn implements OnInit {\n  \n   slot: TemplateRef<any>\n   modelKey: string\n   renderHTML: boolean = false\n   label: string\n   width: string | number = 'auto'\nprivate maxDeep: number = 10\n/**\n * @param {?} root\n * @param {?} el\n */\nconstructor(\nprivate root: ElTable,\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindChild(self: Element): number {\n    const /** @type {?} */ children = self.children\n    if (!children || !children.length) return 0\n    return Array.from(children)\n      .map((child: Element) =>\n        child.tagName.toUpperCase() === 'EL-TABLE-COLUMN')\n      .filter(r => r)\n      .length\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindLevel(self: Element): number {\n    const /** @type {?} */ brothers = self.parentElement.children\n    const /** @type {?} */ brothersDeeps: number[] = Array.from(brothers).map((el: Element) => this.findDeep(el))\n    const /** @type {?} */ maxDeep: number = brothersDeeps.sort((pre, next) => next - pre)[0]\n    return maxDeep\n  }\n/**\n * @param {?} self\n * @return {?}\n */\nfindDeep(self: Element): number {\n    let /** @type {?} */ deep: number = 0\n    Array.from(new Array(this.maxDeep)).every(() => {\n      const /** @type {?} */ children = self.children\n      if (!children || !children.length) return false\n      if (children[0].tagName.toUpperCase() !== 'EL-TABLE-COLUMN') {\n        return false\n      }\n      self = children[0]\n      deep ++\n    })\n    return deep\n  }\n/**\n * @param {?} deep\n * @param {?} self\n * @return {?}\n */\nisLastElement(deep: number, self: Element): boolean {\n    if (deep !== 0) return false\n    let /** @type {?} */ isLast = true\n    Array.from(new Array(this.maxDeep)).every(() => {\n      const /** @type {?} */ parent: Element = self.parentElement\n      if (!parent) return false\n      if (self !== parent.children[parent.children.length - 1]) {\n        isLast = false\n        return false\n      }\n      if (parent.tagName.toUpperCase() !== 'EL-TABLE-COLUMN') {\n        return false\n      }\n      self = parent\n      return true\n    })\n    return isLast\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ self: any = this.el.nativeElement\n    const /** @type {?} */ brothers: Element[] = self.parentElement.children\n    const /** @type {?} */ deep: number = this.findDeep(self)\n    const /** @type {?} */ level: number = deep === 0 && brothers.length > 1 ? this.findLevel(self) : deep\n    \n    const /** @type {?} */ childCount: number = this.findChild(self)\n  \n    const /** @type {?} */ tableColumn: TableColumn = {\n      modelKey: this.modelKey,\n      label: this.label ? this.label : this.modelKey,\n      width: this.width,\n      slot: this.slot,\n      _renderHTML: this.renderHTML,\n      deep, level, childCount,\n    }\n    this.root.updateColumns(tableColumn)\n    if (deep === 0) {\n      this.root.updateColumnsWidth({ auto: false, width: +this.width })\n    }\n    \n    // last element\n    if (this.isLastElement(deep, self)) {\n      this.root.transformColumnsData()\n    }\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-table-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElTable, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'slot': [{ type: ContentChild, args: ['slot', ] },],\n'modelKey': [{ type: Input, args: ['model-key', ] },],\n'renderHTML': [{ type: Input, args: ['render-html', ] },],\n'label': [{ type: Input },],\n'width': [{ type: Input },],\n};\n}\n\nfunction ElTableColumn_tsickle_Closure_declarations() {\n/** @type {?} */\nElTableColumn.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElTableColumn.ctorParameters;\n/** @type {?} */\nElTableColumn.propDecorators;\n/** @type {?} */\nElTableColumn.prototype.slot;\n/** @type {?} */\nElTableColumn.prototype.modelKey;\n/** @type {?} */\nElTableColumn.prototype.renderHTML;\n/** @type {?} */\nElTableColumn.prototype.label;\n/** @type {?} */\nElTableColumn.prototype.width;\n/** @type {?} */\nElTableColumn.prototype.maxDeep;\n/** @type {?} */\nElTableColumn.prototype.root;\n/** @type {?} */\nElTableColumn.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}