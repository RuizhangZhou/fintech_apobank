{"version":3,"file":"notification.service.js","sources":["../../src/notification/notification.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentRef, Injectable, Optional } from '@angular/core';\nimport { ElNotificationContainer } from './notification';\nimport { ExDynamicService } from '../shared/services/index';\n\nexport interface Options {\n  type?: string\n  offset?: number\n  position?: string\n  iconClass?: string\n  customClass?: string\n  duration?: number\n  showClose?: boolean\n  zIndex?: number\n  onClose?: Function\n}\nexport class ElNotificationService {\n  \n  components: any[] = []\n/**\n * @param {?} root\n * @param {?} dynamic\n */\nconstructor(\nprivate root: ElNotificationContainer,\nprivate dynamic: ExDynamicService\n  ) {\n    this.createComponent()\n  }\n/**\n * @param {?} msg\n * @param {?=} title\n * @return {?}\n */\nshow(msg: string, title?: string): void {\n    const /** @type {?} */ len = this.components.length\n    if (len === 0 || this.components[len - 1].init) {\n      this.createComponent()\n    }\n    \n    // mark the component\n    const /** @type {?} */ currentLen = this.components.length\n    const /** @type {?} */ current = this.components[currentLen - 1]\n    current.init = true\n    current.instance.setContent(msg, title)\n    \n    // init current component\n    if (currentLen > 1) {\n      const /** @type {?} */ lastInstance = this.components[currentLen - 2].instance\n      current.instance.offset = lastInstance.height + lastInstance.offset + 15\n    }\n    \n    current.instance.onDestroy = () => {\n      const /** @type {?} */ index = this.components.findIndex(com => com.id === current.id)\n      \n      // reflow top style\n      this.components.forEach((com, i) => {\n        if (i <= index) return\n        com.instance.offset = com.instance.offset - current.instance.height - 15\n      })\n      // component detach and remove element\n      this.dynamic.destroy(current.copy)\n      // remove empty item\n      this.components.splice(index, 1)\n    }\n    \n    const /** @type {?} */ timer = setTimeout(() => {\n      current.instance.show()\n      clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @param {?} msg\n * @param {?=} title\n * @return {?}\n */\nsuccess(msg: string, title?: string): void {\n    this.setOptions({ type: 'success' })\n    this.show(msg, title)\n  }\n/**\n * @param {?} msg\n * @param {?=} title\n * @return {?}\n */\nwarning(msg: string, title?: string): void {\n    this.setOptions({ type: 'warning' })\n    this.show(msg, title)\n  }\n/**\n * @param {?} msg\n * @param {?=} title\n * @return {?}\n */\ninfo(msg: string, title?: string): void {\n    this.setOptions({ type: 'info' })\n    this.show(msg, title)\n  }\n/**\n * @param {?} msg\n * @param {?=} title\n * @return {?}\n */\nerror(msg: string, title?: string): void {\n    this.setOptions({ type: 'error' })\n    this.show(msg, title)\n  }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: Options): void {\n    if (this.components.length === 0 || this.components[this.components.length - 1].init) {\n      this.createComponent()\n    }\n    const /** @type {?} */ last = this.components[this.components.length - 1]\n    last.instance = Object.assign(last.instance, options)\n  }\n/**\n * @return {?}\n */\ncreateComponent(): void {\n    const /** @type {?} */ com: ComponentRef<any> = this.dynamic.generator(ElNotificationContainer)\n    this.components.push({\n      instance: com.instance,\n      id: com.instance.id,\n      copy: com,\n      init: false\n    })\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElNotificationContainer, decorators: [{ type: Optional }, ]},\n{type: ExDynamicService, },\n];\n}\n\nfunction ElNotificationService_tsickle_Closure_declarations() {\n/** @type {?} */\nElNotificationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElNotificationService.ctorParameters;\n/** @type {?} */\nElNotificationService.prototype.components;\n/** @type {?} */\nElNotificationService.prototype.root;\n/** @type {?} */\nElNotificationService.prototype.dynamic;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}