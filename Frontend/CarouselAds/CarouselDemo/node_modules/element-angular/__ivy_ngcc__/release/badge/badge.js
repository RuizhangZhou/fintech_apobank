import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function ElBadge_sup_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sup", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-fixed", true)("is-dot", ctx_r0.isDot);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.makeContent(), " ");
} }
var _c0 = ["*"];
var ElBadge = /** @class */ (function () {
    function ElBadge() {
        this.hidden = false;
        this.isDot = false;
    }
    /**
     * @return {?}
     */
    ElBadge.prototype.makeContent = function () {
        if (this.isDot)
            return '';
        if (typeof this.model === 'number') {
            return this.max < this.model ? this.max + "+" : this.model;
        }
        return this.model;
    };
    /**
     * @nocollapse
     */
    ElBadge.ctorParameters = function () { return []; };
    ElBadge.propDecorators = {
        'model': [{ type: Input },],
        'max': [{ type: Input },],
        'hidden': [{ type: Input },],
        'isDot': [{ type: Input, args: ['is-dot',] },],
    };
ElBadge.ɵfac = function ElBadge_Factory(t) { return new (t || ElBadge)(); };
ElBadge.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElBadge, selectors: [["el-badge"]], inputs: { hidden: "hidden", isDot: ["is-dot", "isDot"], model: "model", max: "max" }, ngContentSelectors: _c0, decls: 3, vars: 1, consts: [[1, "el-badge"], ["class", "el-badge__content", "style", "z-index: 1;", 3, "is-fixed", "is-dot", 4, "ngIf"], [1, "el-badge__content", 2, "z-index", "1"]], template: function ElBadge_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵtemplate(2, ElBadge_sup_2_Template, 2, 5, "sup", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hidden && (!!ctx.makeContent() || ctx.isDot));
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElBadge, [{
        type: Component,
        args: [{
                selector: 'el-badge',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: "\n    <div class=\"el-badge\">\n      <ng-content></ng-content>\n      <sup *ngIf=\"!hidden && (!!makeContent() || isDot)\"\n        class=\"el-badge__content\"\n        style=\"z-index: 1;\"\n        [class.is-fixed]=\"true\" [class.is-dot]=\"isDot\">\n        {{makeContent()}}\n      </sup>\n    </div>\n  "
            }]
    }], function () { return []; }, { hidden: [{
            type: Input
        }], isDot: [{
            type: Input,
            args: ['is-dot']
        }], model: [{
            type: Input
        }], max: [{
            type: Input
        }] }); })();
    return ElBadge;
}());
export { ElBadge };
function ElBadge_tsickle_Closure_declarations() {
    /** @type {?} */
    ElBadge.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElBadge.ctorParameters;
    /** @type {?} */
    ElBadge.propDecorators;
    /** @type {?} */
    ElBadge.prototype.model;
    /** @type {?} */
    ElBadge.prototype.max;
    /** @type {?} */
    ElBadge.prototype.hidden;
    /** @type {?} */
    ElBadge.prototype.isDot;
}

//# sourceMappingURL=badge.js.map