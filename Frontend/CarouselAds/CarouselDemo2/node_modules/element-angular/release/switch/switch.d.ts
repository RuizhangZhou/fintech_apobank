import { EventEmitter, OnInit } from '@angular/core';
import { SafeStyle, DomSanitizer } from '@angular/platform-browser';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class ElSwitch implements OnInit, ControlValueAccessor {
    private sanitizer;
    disabled: boolean;
    elDisabled: boolean;
    name: string;
    width: number;
    activeIconClass: string;
    inactiveIconClass: string;
    activeText: string;
    inactiveText: string;
    activeColor: string;
    inactiveColor: string;
    model: boolean;
    modelChange: EventEmitter<any>;
    _model: boolean;
    hasText: boolean;
    realWidth: number;
    coreStyles: SafeStyle;
    iconTransform: SafeStyle;
    constructor(sanitizer: DomSanitizer);
    changeHandle(nextValue: boolean): void;
    updateStyles(): void;
    ngOnInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    private controlChange;
    private controlTouch;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElSwitch, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ElSwitch, "el-switch", never, { "elDisabled": "elDisabled"; "activeColor": "active-color"; "inactiveColor": "inactive-color"; "disabled": "disabled"; "model": "model"; "name": "name"; "width": "width"; "activeIconClass": "active-icon-class"; "inactiveIconClass": "inactive-icon-class"; "activeText": "active-text"; "inactiveText": "inactive-text"; }, { "modelChange": "modelChange"; }, never, never>;
}

//# sourceMappingURL=switch.d.ts.map