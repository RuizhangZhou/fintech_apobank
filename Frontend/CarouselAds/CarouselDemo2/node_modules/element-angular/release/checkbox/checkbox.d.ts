import { EventEmitter, OnInit, ElementRef, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';
import { ElCheckboxGroup } from './checkbox-group';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class ElCheckbox implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {
    private hostGroup;
    private el;
    content: any;
    disabled: boolean;
    elDisabled: boolean;
    label: string;
    model: any;
    indeterminate: boolean;
    checked: boolean;
    name: string;
    trueLabel: string | number;
    modelChange: EventEmitter<any>;
    labels: any[];
    parentIsGroup: boolean;
    isFocus: boolean;
    showLabel: boolean;
    constructor(hostGroup: ElCheckboxGroup, el: ElementRef);
    isChecked(): boolean;
    changeHandle(t: boolean, notEmit?: boolean): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    private controlChange;
    private controlTouch;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ElCheckbox, [{ optional: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ElCheckbox, "el-checkbox", never, { "elDisabled": "elDisabled"; "indeterminate": "indeterminate"; "checked": "checked"; "disabled": "disabled"; "model": "model"; "label": "label"; "name": "name"; "trueLabel": "true-label"; }, { "modelChange": "modelChange"; }, never, ["*"]>;
}

//# sourceMappingURL=checkbox.d.ts.map