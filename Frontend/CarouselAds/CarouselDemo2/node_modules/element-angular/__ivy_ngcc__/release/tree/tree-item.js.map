{"version":3,"file":"tree-item.js","sources":["../../src/tree/tree-item.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, Optional,\n} from '@angular/core';\nimport { ElTree } from './tree';\nimport { ElTreeModelData } from './tree-props';\nimport { dropAnimation } from '../shared/animation/index';\nexport class ElTreeItem {\n  \n   indent: number\n   model: ElTreeModelData\n/**\n * @param {?} root\n */\nconstructor(\npublic root: ElTree,\n  ) {\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nclickHandle(event: MouseEvent): void {\n    event.stopPropagation()\n    if (!this.root.expandOnClickNode) return this.itemEmitter('click')\n    this.updateExpanded()\n  }\n/**\n * @param {?} event\n * @return {?}\n */\niconClickHandle(event: MouseEvent): void {\n    event.stopPropagation()\n    this.updateExpanded()\n  }\n/**\n * @return {?}\n */\ncheckHandle(): void {\n    if (this.root.elDisabled) return\n    this.root.updateChecked(this.model.id)\n    this.root.emitter({\n      label: this.model.label,\n      treeNodeID: this.model.id,\n      action: 'checkbox',\n      checked: this.model.checked,\n    })\n  }\n/**\n * @return {?}\n */\nupdateExpanded(): void {\n    const /** @type {?} */ dontUpdateExpanded: boolean = this.isLeaf()\n    const /** @type {?} */ nextAction: string = dontUpdateExpanded ? 'click' : (this.model.expanded ? 'close' : 'open')\n    this.itemEmitter(nextAction)\n    !dontUpdateExpanded && this.root.updateExpanded(this.model.id)\n  }\n/**\n * @return {?}\n */\nisLeaf(): boolean {\n    return !this.model.children || !this.model.children.length\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nitemEmitter(action: string): void {\n    this.root.emitter({\n      label: this.model.label,\n      treeNodeID: this.model.id,\n      action: action,\n      checked: this.model.checked,\n    })\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-tree-item',\n  animations: [dropAnimation],\n  \n  template: `\n    <div class=\"el-tree-node\" (click)=\"clickHandle($event)\"\n      [class.is-focusable]=\"!root.elDisabled\"\n      [class.is-checked]=\"!root.elDisabled && model.checked\"\n      role=\"treeitem\">\n      <div class=\"el-tree-node__content\"\n        [ngStyle]=\"{ 'padding-left': (model._level - 1) * indent + 'px' }\">\n        <span class=\"el-tree-node__expand-icon el-icon-caret-right\"\n          [class.expanded]=\"model.expanded\"\n          [class.is-leaf]=\"isLeaf()\"\n          (click)=\"iconClickHandle($event)\"></span>\n        <el-checkbox *ngIf=\"root.showCheckbox\" [model]=\"model.checked\" [indeterminate]=\"model._indeterminate\"\n          [elDisabled]=\"root.elDisabled\"\n          (modelChange)=\"checkHandle($event)\">\n        </el-checkbox>\n        <span class=\"el-tree-node__label\">{{ model.label }}</span>\n      </div>\n      <div class=\"el-tree-node__children\" *ngIf=\"!isLeaf()\" [@dropAnimation]=\"model.expanded\">\n        <el-tree-item *ngFor=\"let item of model.children\"\n          [model]=\"item\" [indent]=\"indent\">\n        </el-tree-item>\n      </div>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElTree, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'indent': [{ type: Input },],\n'model': [{ type: Input },],\n};\n}\n\nfunction ElTreeItem_tsickle_Closure_declarations() {\n/** @type {?} */\nElTreeItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElTreeItem.ctorParameters;\n/** @type {?} */\nElTreeItem.propDecorators;\n/** @type {?} */\nElTreeItem.prototype.indent;\n/** @type {?} */\nElTreeItem.prototype.model;\n/** @type {?} */\nElTreeItem.prototype.root;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}