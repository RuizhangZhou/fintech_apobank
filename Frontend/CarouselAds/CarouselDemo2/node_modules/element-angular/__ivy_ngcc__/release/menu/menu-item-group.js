import { Component, ContentChild, Host, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { ElMenu } from './menu';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './menu';
import * as ɵngcc2 from '@angular/platform-browser';
import * as ɵngcc3 from '@angular/common';

var _c0 = ["title"];
function ElMenuItemGroup_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.title, " ");
} }
function ElMenuItemGroup_ng_container_4_ng_template_1_Template(rf, ctx) { }
function ElMenuItemGroup_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ElMenuItemGroup_ng_container_4_ng_template_1_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.titleTmp);
} }
var _c1 = ["*"];
var ElMenuItemGroup = /** @class */ (function () {
    /**
     * @param {?} rootMenu
     * @param {?} sanitizer
     */
    function ElMenuItemGroup(rootMenu, sanitizer) {
        this.rootMenu = rootMenu;
        this.sanitizer = sanitizer;
        this.title = '';
    }
    /**
     * @return {?}
     */
    ElMenuItemGroup.prototype.paddingStyle = function () {
        return this.sanitizer.bypassSecurityTrustStyle('padding-left: 20px');
    };
    /**
     * @return {?}
     */
    ElMenuItemGroup.prototype.ngOnInit = function () {
        if (!this.title) {
            console.warn('el-menu-item-group required props: [title: string]');
        }
    };
    /**
     * @nocollapse
     */
    ElMenuItemGroup.ctorParameters = function () { return [
        { type: ElMenu, decorators: [{ type: Host },] },
        { type: DomSanitizer, },
    ]; };
    ElMenuItemGroup.propDecorators = {
        'titleTmp': [{ type: ContentChild, args: ['title',] },],
        'title': [{ type: Input },],
    };
ElMenuItemGroup.ɵfac = function ElMenuItemGroup_Factory(t) { return new (t || ElMenuItemGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ElMenu, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer)); };
ElMenuItemGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElMenuItemGroup, selectors: [["el-menu-item-group"]], contentQueries: function ElMenuItemGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTmp = _t.first);
    } }, inputs: { title: "title" }, ngContentSelectors: _c1, decls: 7, vars: 4, consts: [[1, "el-menu-item-group"], [1, "el-menu-item-group__title", 3, "mouseenter", "mouseleave"], ["groupTitle", ""], [4, "ngIf"], [3, "ngTemplateOutlet"]], template: function ElMenuItemGroup_Template(rf, ctx) { if (rf & 1) {
        var _r4 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "li", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵlistener("mouseenter", function ElMenuItemGroup_Template_div_mouseenter_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.style.backgroundColor = ctx.rootMenu.hoverBackgroundColor(); })("mouseleave", function ElMenuItemGroup_Template_div_mouseleave_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); var _r0 = ɵngcc0.ɵɵreference(2); return _r0.style.backgroundColor = ""; });
        ɵngcc0.ɵɵtemplate(3, ElMenuItemGroup_ng_container_3_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(4, ElMenuItemGroup_ng_container_4_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "ul");
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleMap(ctx.paddingStyle());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.titleTmp);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.titleTmp);
    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElMenuItemGroup, [{
        type: Component,
        args: [{
                selector: 'el-menu-item-group',
                template: "\n    <li class=\"el-menu-item-group\">\n      <div class=\"el-menu-item-group__title\" [style]=\"paddingStyle()\" #groupTitle\n        (mouseenter)=\"groupTitle.style.backgroundColor = rootMenu.hoverBackgroundColor() \"\n        (mouseleave)=\"groupTitle.style.backgroundColor = ''\">\n        <ng-container *ngIf=\"!titleTmp\">\n          {{title}}\n        </ng-container>\n        <ng-container *ngIf=\"titleTmp\">\n          <ng-template [ngTemplateOutlet]=\"titleTmp\"></ng-template>\n        </ng-container>\n      </div>\n      <ul><ng-content></ng-content></ul>\n    </li>\n  "
            }]
    }], function () { return [{ type: ɵngcc1.ElMenu, decorators: [{
                type: Host
            }] }, { type: ɵngcc2.DomSanitizer }]; }, { title: [{
            type: Input
        }], titleTmp: [{
            type: ContentChild,
            args: ['title']
        }] }); })();
    return ElMenuItemGroup;
}());
export { ElMenuItemGroup };
function ElMenuItemGroup_tsickle_Closure_declarations() {
    /** @type {?} */
    ElMenuItemGroup.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElMenuItemGroup.ctorParameters;
    /** @type {?} */
    ElMenuItemGroup.propDecorators;
    /** @type {?} */
    ElMenuItemGroup.prototype.titleTmp;
    /** @type {?} */
    ElMenuItemGroup.prototype.title;
    /** @type {?} */
    ElMenuItemGroup.prototype.rootMenu;
    /** @type {?} */
    ElMenuItemGroup.prototype.sanitizer;
}

//# sourceMappingURL=menu-item-group.js.map