import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { CommonModule } from '@angular/common';
import { ElProgressModule } from '../progress/module';
import { ElButtonsModule } from '../button/module';
import { ElUploadRequest } from './upload.request';
import { ElUpload } from './upload';
import { ElUploadList } from './upload.list';
import { ElUploadDragger } from './upload.dragger';
import * as ɵngcc0 from '@angular/core';
var ElUploadModule = /** @class */ (function () {
    function ElUploadModule() {
    }
    /**
     * @return {?}
     */
    ElUploadModule.forRoot = function () {
        return { ngModule: ElUploadModule, providers: [ElUploadRequest] };
    };
    /**
     * @nocollapse
     */
    ElUploadModule.ctorParameters = function () { return []; };
ElUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ElUploadModule });
ElUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ElUploadModule_Factory(t) { return new (t || ElUploadModule)(); }, imports: [[
            CommonModule,
            FormsModule,
            HttpClientModule,
            ElButtonsModule,
            ElProgressModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ElUploadModule, { declarations: function () { return [ElUpload, ElUploadList, ElUploadDragger]; }, imports: function () { return [CommonModule,
        FormsModule,
        HttpClientModule,
        ElButtonsModule,
        ElProgressModule]; }, exports: function () { return [ElUpload]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElUploadModule, [{
        type: NgModule,
        args: [{
                declarations: [ElUpload, ElUploadList, ElUploadDragger],
                exports: [ElUpload],
                imports: [
                    CommonModule,
                    FormsModule,
                    HttpClientModule,
                    ElButtonsModule,
                    ElProgressModule,
                ],
                entryComponents: [ElUpload]
            }]
    }], function () { return []; }, null); })();
    return ElUploadModule;
}());
export { ElUploadModule };
function ElUploadModule_tsickle_Closure_declarations() {
    /** @type {?} */
    ElUploadModule.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElUploadModule.ctorParameters;
}

//# sourceMappingURL=module.js.map