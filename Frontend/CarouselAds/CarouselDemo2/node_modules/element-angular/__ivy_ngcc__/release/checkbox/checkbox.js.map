{"version":3,"file":"checkbox.js","sources":["../../src/checkbox/checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, Output, EventEmitter, OnInit,\n  ElementRef, Optional, AfterViewInit, ViewChild, OnChanges, SimpleChanges, forwardRef,\n} from '@angular/core';\nimport { ElCheckboxGroup } from './checkbox-group';\nimport { isParentTag, removeNgTag } from '../shared/utils/index';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nexport class ElCheckbox implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {\n  \n   content: any\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\n   label: string\n   model: any\n   indeterminate: boolean = false\n   checked: boolean = false\n   name: string\n   trueLabel: string | number\n   modelChange: EventEmitter<any> = new EventEmitter<any>()\n  \n  labels: any[]\n  parentIsGroup: boolean = false\n  isFocus: boolean = false\n  showLabel: boolean = false\n/**\n * @param {?} hostGroup\n * @param {?} el\n */\nconstructor(\nprivate hostGroup: ElCheckboxGroup,\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nisChecked(): boolean {\n    if (this.parentIsGroup) {\n      return this.hostGroup.model.indexOf(this.label) > -1\n    }\n    return this.model\n  }\n/**\n * @param {?} t\n * @param {?=} notEmit\n * @return {?}\n */\nchangeHandle(t: boolean, notEmit: boolean = false): void {\n    if (this.parentIsGroup) {\n      return this.hostGroup.updateModelFromChildren(t, this.label)\n    }\n    this.model = t\n    this.checked = this.isChecked()\n  \n    if (notEmit) return\n    this.modelChange.emit(this.model)\n    this.controlChange(this.model)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ nativeElement = this.el.nativeElement\n    this.parentIsGroup = isParentTag(nativeElement, 'el-checkbox-group')\n    removeNgTag(nativeElement)\n    // update model from group\n    if (this.parentIsGroup) {\n      this.labels = this.hostGroup.model\n      this.model = this.isChecked()\n      // update handle\n      this.hostGroup.subscriber.push(() => {\n        this.model = this.isChecked()\n        this.checked = this.isChecked()\n      })\n    }\n    this.checked = this.isChecked()\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (!changes || !changes.model) return\n    if (changes.model.isFirstChange()) return\n    \n    this.changeHandle(changes.model.currentValue, true)\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    const /** @type {?} */ contentText = this.content && this.content.nativeElement.innerText\n    setTimeout(() => {\n      this.showLabel = !contentText || contentText.length < 1\n    }, 0)\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.model = value\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.controlChange = fn\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.controlTouch = fn\n  }\nprivate controlChange: Function = () => {}\nprivate controlTouch: Function = () => {}\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-checkbox',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ElCheckbox),\n    multi: true\n  }],\n  template: `\n    <label class=\"el-checkbox\">\n    <span class=\"el-checkbox__input\"\n      [class.is-disabled]=\"elDisabled\" [class.is-focus]=\"isFocus\"\n      [class.is-indeterminate]=\"indeterminate\" [class.is-checked]=\"checked\">\n      <span class=\"el-checkbox__inner\"></span>\n      <input class=\"el-checkbox__original\" type=\"checkbox\"\n        [disabled]=\"elDisabled\" [value]=\"label\" [name]=\"name\"\n        [ngModel]=\"model\" (ngModelChange)=\"changeHandle($event)\"\n        (focus)=\"isFocus = true\" (blur)=\"isFocus = false\">\n    </span>\n    <span class=\"el-checkbox__label\" style=\"padding-left: 6px;\">\n      <ng-container *ngIf=\"showLabel\">{{label}}</ng-container>\n      <span *ngIf=\"!showLabel\" #content>\n        <ng-content></ng-content>\n      </span>\n    </span>\n    </label>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElCheckboxGroup, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ViewChild, args: ['content', ] },],\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n'label': [{ type: Input },],\n'model': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n'checked': [{ type: Input },],\n'name': [{ type: Input },],\n'trueLabel': [{ type: Input, args: ['true-label', ] },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nElCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElCheckbox.ctorParameters;\n/** @type {?} */\nElCheckbox.propDecorators;\n/** @type {?} */\nElCheckbox.prototype.content;\n/** @type {?} */\nElCheckbox.prototype.elDisabled;\n/** @type {?} */\nElCheckbox.prototype.label;\n/** @type {?} */\nElCheckbox.prototype.model;\n/** @type {?} */\nElCheckbox.prototype.indeterminate;\n/** @type {?} */\nElCheckbox.prototype.checked;\n/** @type {?} */\nElCheckbox.prototype.name;\n/** @type {?} */\nElCheckbox.prototype.trueLabel;\n/** @type {?} */\nElCheckbox.prototype.modelChange;\n/** @type {?} */\nElCheckbox.prototype.labels;\n/** @type {?} */\nElCheckbox.prototype.parentIsGroup;\n/** @type {?} */\nElCheckbox.prototype.isFocus;\n/** @type {?} */\nElCheckbox.prototype.showLabel;\n/** @type {?} */\nElCheckbox.prototype.controlChange;\n/** @type {?} */\nElCheckbox.prototype.controlTouch;\n/** @type {?} */\nElCheckbox.prototype.hostGroup;\n/** @type {?} */\nElCheckbox.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}