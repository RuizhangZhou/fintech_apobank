import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var ElBreadcrumb = /** @class */ (function () {
    function ElBreadcrumb() {
        this.separator = '/';
        this.prevent = false;
        this.next = new EventEmitter();
    }
    /**
     * @param {?} path
     * @return {?}
     */
    ElBreadcrumb.prototype.itemHandle = function (path) {
        this.next.emit(path);
    };
    /**
     * @nocollapse
     */
    ElBreadcrumb.ctorParameters = function () { return []; };
    ElBreadcrumb.propDecorators = {
        'separator': [{ type: Input },],
        'separatorClass': [{ type: Input, args: ['separator-class',] },],
        'prevent': [{ type: Input },],
        'next': [{ type: Output, args: ['next',] },],
    };
ElBreadcrumb.ɵfac = function ElBreadcrumb_Factory(t) { return new (t || ElBreadcrumb)(); };
ElBreadcrumb.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElBreadcrumb, selectors: [["el-breadcrumb"]], inputs: { separator: "separator", prevent: "prevent", separatorClass: ["separator-class", "separatorClass"] }, outputs: { next: "next" }, ngContentSelectors: _c0, decls: 2, vars: 0, consts: [["aria-label", "Breadcrumb", "role", "navigation", 1, "el-breadcrumb"]], template: function ElBreadcrumb_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElBreadcrumb, [{
        type: Component,
        args: [{
                selector: 'el-breadcrumb',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: "\n    <div class=\"el-breadcrumb\" aria-label=\"Breadcrumb\" role=\"navigation\">\n      <ng-content></ng-content>\n    </div>\n  "
            }]
    }], function () { return []; }, { separator: [{
            type: Input
        }], prevent: [{
            type: Input
        }], next: [{
            type: Output,
            args: ['next']
        }], separatorClass: [{
            type: Input,
            args: ['separator-class']
        }] }); })();
    return ElBreadcrumb;
}());
export { ElBreadcrumb };
function ElBreadcrumb_tsickle_Closure_declarations() {
    /** @type {?} */
    ElBreadcrumb.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElBreadcrumb.ctorParameters;
    /** @type {?} */
    ElBreadcrumb.propDecorators;
    /** @type {?} */
    ElBreadcrumb.prototype.separator;
    /** @type {?} */
    ElBreadcrumb.prototype.separatorClass;
    /** @type {?} */
    ElBreadcrumb.prototype.prevent;
    /** @type {?} */
    ElBreadcrumb.prototype.next;
}

//# sourceMappingURL=breadcrumb.js.map