import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ElBreadcrumb } from './breadcrumb';
import { ElBreadcrumbItem } from './breadcrumb-item';
import * as ɵngcc0 from '@angular/core';
var ElBreadcrumbsModule = /** @class */ (function () {
    function ElBreadcrumbsModule() {
    }
    /**
     * @return {?}
     */
    ElBreadcrumbsModule.forRoot = function () {
        return { ngModule: ElBreadcrumbsModule, providers: [] };
    };
    /**
     * @nocollapse
     */
    ElBreadcrumbsModule.ctorParameters = function () { return []; };
ElBreadcrumbsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ElBreadcrumbsModule });
ElBreadcrumbsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ElBreadcrumbsModule_Factory(t) { return new (t || ElBreadcrumbsModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ElBreadcrumbsModule, { declarations: function () { return [ElBreadcrumb, ElBreadcrumbItem]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ElBreadcrumb, ElBreadcrumbItem]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElBreadcrumbsModule, [{
        type: NgModule,
        args: [{
                declarations: [ElBreadcrumb, ElBreadcrumbItem],
                exports: [ElBreadcrumb, ElBreadcrumbItem],
                imports: [CommonModule],
                entryComponents: [ElBreadcrumb]
            }]
    }], function () { return []; }, null); })();
    return ElBreadcrumbsModule;
}());
export { ElBreadcrumbsModule };
function ElBreadcrumbsModule_tsickle_Closure_declarations() {
    /** @type {?} */
    ElBreadcrumbsModule.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElBreadcrumbsModule.ctorParameters;
}

//# sourceMappingURL=module.js.map