import { Component, ElementRef } from '@angular/core';
import { notifyAnimation } from '../shared/animation/index';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function ElNotificationContainer_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i");
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap("el-notification__icon " + ctx_r0.makeClass() + " " + ctx_r0.iconClass);
} }
function ElNotificationContainer_h2_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.title);
} }
var _c0 = function (a0, a1) { return { top: a0, "z-index": a1 }; };
export var /** @type {?} */ typeMap = {
    success: 'success',
    info: 'info',
    warning: 'warning',
    error: 'error',
};
var ElNotificationContainer = /** @class */ (function () {
    /**
     * @param {?} el
     */
    function ElNotificationContainer(el) {
        this.el = el;
        this.height = 0;
        // user setting
        this.offset = 15;
        this.type = '';
        this.duration = 3000;
        this.iconClass = '';
        this.customClass = '';
        this.zIndex = 1000;
        this.position = 'top-right';
        this.title = '';
        this.message = '';
        this.showBox = false;
        this.horizontalDirection = 'right';
        this.onClose = function () { };
        this.onDestroy = function () { };
    }
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.makeClass = function () {
        return typeMap[this.type] ? "el-icon-" + typeMap[this.type] : '';
    };
    /**
     * @param {?} message
     * @param {?=} title
     * @return {?}
     */
    ElNotificationContainer.prototype.setContent = function (message, title) {
        var _this = this;
        if (title === void 0) { title = ''; }
        this.message = message;
        this.title = title;
        setTimeout(function () {
            _this.height = _this.el.nativeElement.children[0].offsetHeight;
        }, 0);
    };
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.show = function () {
        var _this = this;
        this.showBox = true;
        this.timer = setTimeout(function () {
            _this.close();
        }, this.duration);
    };
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.close = function () {
        this.timer && clearTimeout(this.timer);
        this.showBox = false;
        this.onClose();
        this.onDestroy();
    };
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.startTimer = function () {
        var _this = this;
        if (!this.showBox)
            return;
        this.timer = setTimeout(function () {
            _this.close();
        }, this.duration);
    };
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.clearTimer = function () {
        this.timer && clearTimeout(this.timer);
    };
    /**
     * @return {?}
     */
    ElNotificationContainer.prototype.ngOnInit = function () {
        this.horizontalDirection = this.position.includes('right') ? 'right' : 'left';
    };
    /**
     * @nocollapse
     */
    ElNotificationContainer.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
ElNotificationContainer.ɵfac = function ElNotificationContainer_Factory(t) { return new (t || ElNotificationContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ElNotificationContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ElNotificationContainer, selectors: [["el-notification-container"]], decls: 8, vars: 12, consts: [[2, "visibility", "hidden", 3, "ngStyle", "mouseenter", "mouseleave"], [3, "class", 4, "ngIf"], [1, "el-notification__group"], ["class", "el-notification__title", 4, "ngIf"], [1, "el-notification__content"], [1, "el-notification__closeBtn", "el-icon-close", 3, "click"], [1, "el-notification__title"]], template: function ElNotificationContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("mouseenter", function ElNotificationContainer_Template_div_mouseenter_0_listener() { return ctx.clearTimer(); })("mouseleave", function ElNotificationContainer_Template_div_mouseleave_0_listener() { return ctx.startTimer(); });
        ɵngcc0.ɵɵtemplate(1, ElNotificationContainer_i_1_Template, 1, 2, "i", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, ElNotificationContainer_h2_3_Template, 2, 1, "h2", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "p");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵlistener("click", function ElNotificationContainer_Template_div_click_7_listener() { return ctx.close(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap("el-notification " + ctx.horizontalDirection + " " + ctx.customClass);
        ɵngcc0.ɵɵproperty("@notifyAnimation", ctx.showBox)("ngStyle", ɵngcc0.ɵɵpureFunction2(9, _c0, ctx.offset ? ctx.offset + "px" : "auto", ctx.zIndex));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type || ctx.iconClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("is-with-icon", ctx.makeClass() || ctx.iconClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.message);
    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgIf], encapsulation: 2, data: { animation: [notifyAnimation] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElNotificationContainer, [{
        type: Component,
        args: [{
                selector: 'el-notification-container',
                template: "\n    <div [class]=\"'el-notification ' + horizontalDirection + ' ' + customClass\"\n      [@notifyAnimation]=\"showBox\"\n      [ngStyle]=\"{top: (offset ? offset + 'px' : 'auto'), 'z-index': zIndex}\"\n      style=\"visibility: hidden;\"\n      (mouseenter)=\"clearTimer()\" (mouseleave)=\"startTimer()\">\n      <i [class]=\"'el-notification__icon ' + makeClass() + ' ' + iconClass\"\n        *ngIf=\"type || iconClass\"></i>\n      <div class=\"el-notification__group\" [class.is-with-icon]=\"makeClass() || iconClass\">\n        <h2 class=\"el-notification__title\" *ngIf=\"title\">{{title}}</h2>\n        <div class=\"el-notification__content\"><p>{{message}}</p></div>\n        <div class=\"el-notification__closeBtn el-icon-close\" (click)=\"close()\"></div>\n      </div>\n    </div>\n  ",
                animations: [notifyAnimation]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return ElNotificationContainer;
}());
export { ElNotificationContainer };
function ElNotificationContainer_tsickle_Closure_declarations() {
    /** @type {?} */
    ElNotificationContainer.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElNotificationContainer.ctorParameters;
    /** @type {?} */
    ElNotificationContainer.prototype.id;
    /** @type {?} */
    ElNotificationContainer.prototype.height;
    /** @type {?} */
    ElNotificationContainer.prototype.offset;
    /** @type {?} */
    ElNotificationContainer.prototype.type;
    /** @type {?} */
    ElNotificationContainer.prototype.duration;
    /** @type {?} */
    ElNotificationContainer.prototype.iconClass;
    /** @type {?} */
    ElNotificationContainer.prototype.customClass;
    /** @type {?} */
    ElNotificationContainer.prototype.zIndex;
    /** @type {?} */
    ElNotificationContainer.prototype.position;
    /** @type {?} */
    ElNotificationContainer.prototype.title;
    /** @type {?} */
    ElNotificationContainer.prototype.message;
    /** @type {?} */
    ElNotificationContainer.prototype.showBox;
    /** @type {?} */
    ElNotificationContainer.prototype.timer;
    /** @type {?} */
    ElNotificationContainer.prototype.horizontalDirection;
    /** @type {?} */
    ElNotificationContainer.prototype.onClose;
    /** @type {?} */
    ElNotificationContainer.prototype.onDestroy;
    /** @type {?} */
    ElNotificationContainer.prototype.el;
}

//# sourceMappingURL=notification.js.map