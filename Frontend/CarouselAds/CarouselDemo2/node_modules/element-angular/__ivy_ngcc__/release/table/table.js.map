{"version":3,"file":"table.js","sources":["../../src/table/table.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAAW,UAAA,EAA4B,eAAA,EAA+C,SAAA,EAE/F,SAAS,GACV,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,eAAA,EAAiB,aAAA,EAAc,MAAA,0BAAA,CAAA;AAExC,OAAO,EAAE,YAAA,EAAa,MAAA,eAAA,CAAA;AACtB,OAAO,EAAE,aAAA,EAAc,MAAA,gBAAA,CAAA;AACvB;AAAiD,IAEhD,2BAAA;AAAC,IAuBF;AACA;AACI;AACI;AACI;AACI;AAGb,OAFA;AACH,IAAA,iBAJY,EAAI,EACJ,QAAU,EACV,QAAU,EACV,MAAQ,EACR,OAAS;AACT,QADZ,YAOI,iBAAO,SAER;AACH,QAdY,QAAA,GAAA,EAAA,CAAI;AAAC,QACL,cAAA,GAAA,QAAA,CAAU;AACpB,QAAU,cAAA,GAAA,QAAA,CAAU;AACrB,QAAW,YAAA,GAAA,MAAA,CAAQ;AAEhB,QADQ,aAAA,GAAA,OAAA,CAAS;AACZ,QA5BP,sBAAgB,GAEU,EAAA,CAAA;AACrB,QAFL,YAAM,GAEQ;AAAE,YADd,YAAY,EAEE,EAAA;AAAE,YADhB,UAAU,EAEE,MAAA;AAAE,YADd,SAAS,EAEE,MAAA;AACF,YAFT,cAAc,EAEE,CAAA;AAAE,SADnB,CAAA;AACH,QAAE,kBAAY,GAEgB,EAAA,CAAA;AAAC,QACrB,aAAA,GAAyB,EAAA,CAAA;AAC1B,QAKC,gBAAA,GAAqB,CAAA,CAAA;AACH,QAkBxB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAA;AAChD;AAEc,IAFZ,CAAC;AACH,IAvBA;AACA;AAEA,OADG;AACH,IACG,wBAAA,GADH;AAAc,QACV,MAAM,CACC,IAAA,CAAK,MAAC,EAAM,CAAE,QAAC,CAAQ,EAAC,CAAE,CAAC,MAAC,CAAM,CAAC,EAAE,CAAA,CAAE,CAAA;AAI/C,IAJD,CAAC;AACF,IAiBD;AACA;AACI;AAEA,OADD;AACH,IAAA,4BARG,GAQH,UARG,KAAA;AACF,QAQG,EAAE,CAAC,CAAC,CARC,IAAC,CAAI,OAAC,CAAO;AACX,YADY,MAAA,CAAA;AACX,QAQR,IAAM,gBAAgB,CARhB,EAAA,GAAc,CAAA,CAAU,KAAC,CAAK,MAAC,CAAA,CAAM,CAAA;AAAC,QAS5C,EAAE,CAAC,CAAC,EARC,CAAE,UAAC,KAAc,SAAA,CAAU;AAG3B,YAH4B,MAAA,CAAA;AAG3B,QAMN,IAAI,CARC,SAAC,CAAS,aAAC,CAAa,UAAC,GAAY,EAAA,CAAG,UAAC,CAAA;AAI1C,IAKN,CAAC;AACF,IAAD;AACA;AACI;AAEA,OADD;AACH,IAAA,+BAXG,GAWH,UAXG,MAAA;AACA,QAWC,IAAM,gBAAgB,CAXhB,IAAA,GAAoB,MAAA,CAAO,MAAC,CAAM,MAAC,EAAO,EAAE,KAAA,EAAO,IAAA,CAAK,OAAC,CAAO,MAAC,EAAM,CAAE,CAAA;AAE9D,QAUjB,IAAI,CAXC,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,CAAA;AAAC,IAY1B,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,kCAbG,GAaH;AAAc,QAAd,iBAcG;AACH,QAdI,IAAM,gBAAgB,CAbhB,MAAA,GAAiB,aAAA,CAAc,WAAC,CAAW,IAAC,CAAI,MAAC,CAAM,CAAA;AAK/C,QASd,IAAM,gBAAgB,CAbhB,MAAA,GAAsB,IAAA,CAAK,SAAC,CAAS,aAAC,CAAA;AAI3C,QAUD,EAAE,CAAC,CAAC,CAbC,MAAC,IAAS,CAAA,MAAE,CAAM;AACpB,YADqB,MAAA,CAAA;AACpB,QAcJ,IAAM,gBAAgB,CAbhB,KAAA,GAAa,UAAA,CAAW;AAEjC,YAYK,IAAM,gBAAgB,CAbhB,YAAA,GAAuB,MAAA,CAAO,YAAC,CAAA;AAC1C,YAaK,EAAE,CAAC,CAAC,YAbC,CAAY,CAAC,CAAA;AAAC,gBAcjB,KAAI,CAbC,MAAC,CAAM,YAAC,GAAc,YAAA,CAAA;AAGnC,gBAWQ,KAAI,CAbC,MAAC,CAAM,UAAC,GAAY,MAAA,GAAS,KAAA,CAAK,MAAC,CAAM,YAAC,CAAA;AAKrD,gBASM,KAAI,CAbC,MAAC,CAAM,cAAC,GAAgB,KAAA,CAAK,MAAC,CAAM,UAAC,GAAY,KAAA,CAAK,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAA;AAIjD,YAU3B,CAAC;AACP,YAAM,YAAY,CAbC,KAAC,CAAK,CAAA;AACH,QAalB,CAAC,EAbE,CAAA,CAAE,CAAA;AAAC,IAcR,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,8BAfG,GAeH;AAAc,QACV,IAAM,gBAAgB,CAfhB,OAAA,GAAuB,IAAA,CAAK,EAAC,CAAE,aAAC,CAAa,QAAC,CAAQ,CAAC,CAAC,CAAA;AAE/D,QAcC,IAAI,CAfC,MAAC,CAAM,SAAC,GAAW,IAAA,CAAK,UAAC,IAAa,OAAA,CAAQ,WAAC,CAAA;AAAC,QAgBrD,EAAE,CAAC,CAAC,IAfC,CAAI,UAAC,CAAU,CAAC,CAAA;AAAC,YAgBpB,IAAI,CAfC,QAAC,CAAQ,QAAC,CAAQ,OAAC,EAAQ,OAAA,EAAS,IAAI,CAAI,UAAC,OAAU,CAAI,CAAA;AACzB,QAezC,CAAC;AACL,IAAE,CAAC;AACF,IAAD;AACA;AACI;AAEA,OADD;AACH,IAAA,oCAlBG,GAkBH,UAlBG,SAAA;AAAI,QAmBH,IAAI,CAlBC,YAAC,CAAY,IAAC,CAAI,SAAC,CAAS,CAAA;AAEnC,IAiBA,CAAC;AACF,IAAD;AACA;AACI;AAEA,OADD;AACH,IAAA,qCArBG,GAqBH,UArBG,YAAA;AACA,QAqBC,IAAI,gBAAgB,CArBhB,IAAA,GAAe,CAAA,EAAE,gBAAA,CAAC,KAAA,GAAe,CAAA,CAAA;AAGzC,QAmBI,YAAY,CArBC,OAAC,CAAO,UAAC,IAAM;AAEvB,YAoBH,EAAE,CAAC,CAAC,IArBC,CAAI,IAAC,CAAI;AAAC,gBAAA,MAAA,CAAO,IAAA,EAAK,CAAA;AACtB,YAqBL,EAAE,CAAC,CAAC,MArBC,CAAM,KAAC,CAAK,IAAC,CAAI,KAAC,CAAK,CAAC,CAAC,CAAA;AAAC,gBAsB7B,IAAI,CArBC,IAAC,GAAM,IAAA,CAAA;AAAC,gBAsBb,MAAM,CArBC,IAAA,EAAK,CAAA;AAAC,YAsBf,CAAC;AACP,YAAM,KAAK,IArBI,IAAA,CAAK,KAAC,CAAA;AAGb,QAmBJ,CAAC,CArBC,CAAA;AACH,QAqBC,6CAA6C;AACjD,QAAI,gBAAgB;AACpB,QAAI,EAAE,CAAC,CAAC,CArBC,IAAC,CAAI,CAAC,CAAA;AACd,YAqBK,IAAI,CArBC,UAAC,GAAY,KAAA,CAAA;AACH,YAqBf,IAAI,CArBC,YAAC,EAAY,CAAA;AAAC,QAsBrB,CAAC;AACL,QACI,IAAM,gBAAgB,CArBhB,OAAA,GAAkB,CAAA,IAAE,CAAI,MAAC,CAAM,SAAC,GAAW,KAAA,CAAM,GAAG,IAAA,CAAA;AAIjD,QAkBT,MAAM,CArBC,YAAA,CAAa,GAAC,CAAG,UAAC,IAAM;AACvB,YAqBN,OAAA,IAAI,CArBC,IAAC,CAAI,CAAA,CAAE,MAAA,CAAO,MAAC,CAAM,IAAC,EAAK,EAAE,KAAA,EAAO,OAAA,EAAQ,CAAE,CAAC,CAAA,CAAE,IAAA;AAEjB,QAmBrC,CArBsD,CAAK,CAAA;AAElB,IAoB7C,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,sCAvBG,GAuBH;AAAc,QAAd,iBAwBG;AACH,QAxBI,gBAAgB;AACpB,QAAI,IAAI,CAvBC,OAAC,GAAS,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,UAAC,MAAQ;AAChC,YAuBP,EAAE,CAAC,CAAC,CAvBC,KAAC,CAAK,OAAC,CAAO,KAAC,CAAI,gBAAC,CAAgB,MAAC,CAAM,KAAC,CAAK,CAAC,CAAC,CAAC,CAAA;AAAC,gBAwBxD,KAAI,CAvBC,gBAAC,CAAgB,MAAC,CAAM,KAAC,CAAK,GAAG,EAAA,CAAA;AACxB,YAuBhB,CAAC;AACP,YAAM,KAAI,CAvBC,gBAAC,CAAgB,MAAC,CAAM,KAAC,CAAK,CAAC,IAAC,CAAI,MAAC,CAAM,CAAA;AAGxC,YAqBR,EAAE,CAAC,CAAC,MAvBC,CAAM,IAAC,KAAQ,CAAA,CAAE;AACzB,gBAD0B,MAAA,CAAO,MAAA,CAAA;AAEhC,YAsBE,MAAM,CAvBC,IAAA,CAAA;AACN,QAuBH,CAAC,CAvBC,CAAC,MAAC,CAAM,UAAA,CAAC,IAAI,OAAA,CAAA,EAAA,CAAA,CAAE,CAAA;AAAC,QAwBlB,IAAI,CAvBC,gBAAC,CAAgB,OAAC,EAAO,CAAA;AACpB,QAuBV,IAAI,CAvBC,YAAC,GAAc,IAAA,CAAK,mBAAC,CAAmB,IAAC,CAAI,YAAC,CAAY,CAAA;AAE9C,QAuBjB,wBAAwB;AAC5B,QAAI,IAAI,CAvBC,OAAC,GAAS,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,UAAC,MAAQ;AAEP,YAsBhC,EAAE,CAAC,CAAC,CAvBC,MAAC,CAAM,IAAC,CAAI;AACJ,gBADK,MAAA,CAAO,MAAA,CAAA;AACJ,YAuBrB,IAAM,gBAAgB,CAvBhB,YAAA,GAAuB,OAAA,CAAQ,gBAAC,EAAgB,CAAA;AAAC,YAwBvD,KAAI,CAvBC,WAAC,GAAa,KAAA,CAAK,KAAC,CAAK,GAAC,CAAG,UAAC,CAAG;AAAI,gBAAI,OAAA,MAAA,CAAO,MAAC,CAAM,CAAC,YAAI,GAAA,YAAE,IAAc,MAAA,CAAO,IAAC,MAAM;AAC/C;AAGlD,YAJgD,CAAiD,CAAC,CAAA;AAChD,YAuBhD,MAAM,CAvBC,MAAA,CAAO,MAAC,CAAM,MAAC,EAAO,EAAE,QAAA,EAAU,YAAA,EAAa,CAAE,CAAA;AAAC,QAwB3D,CAAC,CAvBC,CAAA;AACH,QAwBC,IAAI,CAvBC,QAAC,GAAU,IAAA,CAAK,OAAC,CAAO,MAAC,CAAM,UAAC,GAAC,EAAI,IAAM;AAG9C,YAqBA,OAAA,MAAM,CAvBC,MAAC,CAAM,GAAC,YAAM,GAAA,IAAE,CAAI,QAAC,IAAU,IAAA,MAAO;AAEjC;AACD,QAoBX,CAvB6C,EAAE,EAAA,CAAG,CAAA;AAGvD,QAqBG,IAAI,CAvBC,kBAAC,EAAkB,CAAA;AAAC,IAwB3B,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,oCAzBG,GAyBH;AAAc,QACV,IAAM,gBAAgB,CAzBhB,QAAA,GAAqB,IAAA,CAAK,QAAC,CAAA;AAAC,QA0BlC,0BAA0B;AAC9B,QAAI,EAAE,CAAC,CAAC,CAzBC,IAAC,CAAI,WAAC,CAAW,CAAC,CAAA;AAAC,YA0BtB,IAAI,CAzBC,WAAC,GAAa,IAAA,CAAK,KAAC,CAAA;AAAC,QA0B5B,CAAC;AACL,QAAI,IAAM,gBAAgB,CAzBhB,cAAA,GAA6C,IAAA,CAAK,WAAC,CAAW,GAAC,CAAG,UAAC,GAAK;AAEtD,YAwBtB,OAAA,MAAM,CAzBC,IAAC,cAAM,GAAI,EAAI,QAAI,EAAU,CAAC,GAAC,CAAG,UAAC,CAAY;AAChC,gBAyBpB,IAAM,gBAAgB,CAzBhB,IAAA,GAAY,QAAA,CAAS,CAAC,CAAC,IAAI,EAAA,CAAA;AAAC,gBA0BlC,MAAM;AACT,wBAAK,MAAM,EAzBE,CAAA,IAAE,CAAI,KAAC;AAAE,wBA0BjB,KAAK,EAzBE,GAAA,CAAI,CAAC,CAAC;AAAC;AAAuB,oBAAtB,GAAA,CAAE,IAAG,GAAA,CAAI,CAAC,CAAC;AAAE,oBA0B5B,QAAK,GAzBE,CAAA,CAAE,IAAC,CAAI,KAAC;AAAE,oBA0BjB,QAAK,GAzBE,IAAA,CAAK,KAAC;AAAE,oBA0Bf,cAAW,GAzBE,IAAA,CAAK,WAAC;AAAE,uBA0BtB;AACT;AACe,YADT,CAAC,CAzBC;AACN,iBAyBK,MAzBC,CAAM,UAAC,CAAG,IAAQ,OAAA,CAAA,CAAE,CAAC,EAAH,CAAG,CAAC;AACH,QAcrB,CAfwB,CA0BzB,CAAA;AACL,QAAI,cAAc;AAClB,QAAI,IAAI,CAzBC,WAAC,GAAa,cAAA,CAAe,GAAC,CAAG,UAAC,GAAyB;AAKrD,YAqBT,OAAA,GAAG,CAzBC,IAAC,CAAI,UAAC,GAAC,EAAI,IAAA,IAAS,OAAA,GAAA,CAAI,KAAC,GAAO,IAAA,CAAK,KAAC,EAAlB,CAAkB,CAAK;AAIzB,QAqBtB,CAzB+C,CAAC,CAAA;AAI1B,QAuBxB,IAAI,CAzBC,gBAAC,EAAgB,CAAA;AAElB,IAwBN,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,0BA3BG,GA2BH;AAAc,QAAd,iBAOG;AACH,QAPI,IAAI,CA3BC,YAAC,EAAY,CAAA;AAAC,QA4BnB,IAAI,CA3BC,gBAAC,EAAgB,CAAA;AAAC,QA4BvB,IAAI,CA3BC,gBAAC,GAAkB,IAAA,CAAK,QAAC,CAAQ,MAAC,CAAM,QAAC,EAAS,QAAA,EAAU;AAE5B,YA0BnC,KAAI,CA3BC,YAAC,EAAY,CAAA;AACL,YA2Bb,KAAI,CA3BC,YAAC,GAAc,KAAA,CAAK,mBAAC,CAAmB,KAAC,CAAI,YAAC,CAAY,CAAA;AAAC,QA4BlE,CAAC,CA3BC,CAAA;AAAC,IA4BL,CAAC;AACF,IAAD;AACA;AACI;AAEA,OADD;AACH,IAAA,6BA9BG,GA8BH,UA9BG,OAAA;AAAI,QA+BH,oBAAoB;AACxB,QAAI,EAAE,CAAC,CAAC,CA9BC,OAAC,IAAU,CAAA,OAAE,CAAO,KAAC,CAAK;AAC9B,YAD+B,MAAA,CAAA;AAC9B,QA8BF,eAAe;AACnB,QAAI,EAAE,CAAC,CAAC,OA9BC,CAAO,KAAC,CAAK,aAAC,EAAa,CAAE;AAAC,YAAA,MAAA,CAAA;AACvC,QA8BI,IAAI,CA9BC,KAAC,GAAO,OAAA,CAAQ,KAAC,CAAK,YAAC,CAAA;AAElB,QA6BV,IAAI,CA9BC,kBAAC,EAAkB,CAAA;AACR,IA8BlB,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,2BAhCG,GAgCH;AAAc,QAAd,iBAiBG;AACH,QAjBI,IAAM,gBAAgB,CAhChB,MAAA,GAAS,IAAA,CAAK,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,KAAC,CAAK,CAAA;AAAC,QAiC5C,EAAE,CAAC,CAAC,CAhCC,MAAC,IAAS,CAAA,IAAE,CAAI,QAAC,CAAQ;AAAC,YAAA,MAAA,CAAA;AAAC,QAkChC,wBAAwB;AAC5B,QAAI,IAAI,CAhCC,WAAC,GAAa,IAAA,CAAK,KAAC,CAAA;AAI1B,QA6BC,IAAM,gBAAgB,CAhChB,WAAA,GAA6B,IAAA,CAAK,OAAC,CAAO,GAAC,CAAG,UAAC,MAAQ;AAK9D,YA4BG,EAAE,CAAC,CAAC,CAhCC,MAAC,CAAM,IAAC,CAAI;AAElB,gBAFmB,MAAA,CAAO,MAAA,CAAA;AAElB,YA+BP,IAAM,gBAAgB,CAhChB,YAAA,GAAuB,OAAA,CAAQ,gBAAC,EAAgB,CAAA;AAG9C,YA+BR,KAAI,CAhCC,WAAC,GAAa,KAAA,CAAK,KAAC,CAAK,GAAC,CAAG,UAAC,CAAG;AACpB,gBAD4B,OAAA,MAAA,CAAO,MAAC,CAAM,CAAC,YAAI,GAAA,YAAE,IAAc,MAAA,CAAO,IAAC,MAAM;AAElD;AAAwB,YAFvB,CAAiD,CAAC,CAAA;AAEnD,YA+B7C,MAAM,CAhCC,MAAA,CAAO,MAAC,CAAM,MAAC,EAAO,EAAE,QAAA,EAAU,YAAA,EAAa,CAAE,CAAA;AAC3B,QAgC/B,CAAC,CAhCC,CAAA;AAAC,QAkCH,IAAI,CAhCC,QAAC,GAAU,WAAA,CAAY,MAAC,CAAM,UAAC,GAAC,EAAI,IAAM;AAAI,YAiCjD,OAAA,MAAM,CAhCC,MAAC,CAAM,GAAC,YAAM,GAAA,IAAE,CAAI,QAAC,IAAU,IAAA,MAAO;AAKlD;AACgB,QA0BX,CAhC6C,EAAE,EAAA,CAAG,CAAA;AAMvD,QA2BG,IAAI,CAhCC,kBAAC,EAAkB,CAAA;AAEP,IA+BnB,CAAC;AACF,IAAD;AACA;AAEA,OADG;AACH,IAAA,6BAlCG,GAkCH;AAAc,QACV,IAAI,CAlCC,gBAAC,IAAmB,IAAA,CAAK,gBAAC,EAAgB,CAAA;AAE/C,IAiCF,CAAC,CAED;IAlCK,JAkCJ,IAmCH;cArEO,GAAoC,jBAsE3C;AAEA,OADG;AApCH,EAlCE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,sBAmCvB,hDAoCF,IApCC,sBAAA,GAAA,cAAA,OAAA;IAAS,EAlCE,UAAA,hBAkCT,QAqCH,EAAC,IAAI,EAAE,UAAU,GAAG;OApClB,MAAM,EAlCE,CAAA,hBAuEV,QAAA,EAAC,IAAI,EAAE,SAAS,GAAG;AACnB,QAAA,EAAC,IAAI,EAAE,eAAe,GAAG;2BApCtB,CAlCC,5BAuEJ,QAAA,EAAC,IAAI,EAAE,aAAa,GAAG;gBApCrB,QAAQ,EAlCE,1BAuEZ,QAAA,EAAC,IAAI,EAAE,eAAe,GAAG;AACzB,KAAC,EA1CA,CA0CA,CAAC;AACF,IApCO,sBAAA,GAAyD;AACnD,QAoCb,WAAW,EApCE,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;AACvC,KAoCjB;;;;;;;uqBAfE;MACF,EAlCC,EAAG,OAmCJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAvBC;AAAC,IAqCH,cAAC;AAED,CArRA,AAmRC,CAjRA,YAAA,GAiRA;AACD,SAlRC,OAAA;AAmRD;AACA,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,UAAU,CAAC;AACnB,IAAA;AACA;AACI;AAEA,OADD;AACH,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC;AAC5B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;AAC9B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACnC,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;AACzB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC;AAC/B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;AAC1B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACnC,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC3B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC;AAC9B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;AACzB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC;AAC7B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;AACrB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC3B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC3B,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;AACzB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;AAC1B,CAAC;AACD","sourcesContent":["import {\n  Component, DoCheck, ElementRef, KeyValueDiffer, KeyValueDiffers, OnChanges, OnDestroy, OnInit, Renderer2,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { DocumentWrapper, WindowWrapper } from '../shared/services/index';\nimport { ModelWithIndexDataItem, OrderMap, TableColumn, TableColumnDataItem, WidthItem } from './table.interface';\nimport { ElTableProps } from './table.props';\nimport { ElTableFormat } from './utils/format';\nexport class ElTable extends ElTableProps implements OnInit, OnDestroy, OnChanges, DoCheck {\n  \n   headerRef: ElementRef\n  \n  columnsData: TableColumnDataItem[][]\n  columnsWithLevel: any[] = []\n  layout: any = {\n    headerHeight: 40,\n    bodyHeight: 'auto',\n    bodyWidth: 'auto',\n    scrollBarWidth: 0,\n  }\n  columnsWidth: WidthItem[] = []\nprivate columns: TableColumn[] = []\nprivate globalListenFunc: Function\nprivate orderMap: OrderMap\nprivate modelStorge: any\nprivate differ: KeyValueDiffer<any, any>\nprivate widthCount: number = 0\n/**\n * @return {?}\n */\nstatic GEN_TEMPLATE_KEY(): string {\n    return Math.random().toString(16).substr(2, 8)\n  }\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} document\n * @param {?} window\n * @param {?} differs\n */\nconstructor(\nprivate el: ElementRef,\nprivate renderer: Renderer2,\nprivate document: DocumentWrapper,\nprivate window: WindowWrapper,\nprivate differs: KeyValueDiffers,\n  ) {\n    super()\n    this.differ = this.differs.find([]).create()\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nbodyScroll(event: Event): void {\n    if (!this.scrollX) return\n    const /** @type {?} */ el: Element = ( /** @type {?} */((<Element>event.target)))\n    if (el.scrollLeft === undefined) return\n    this.headerRef.nativeElement.scrollLeft = el.scrollLeft\n  }\n/**\n * @param {?} column\n * @return {?}\n */\nupdateColumns(column: TableColumn): void {\n    const /** @type {?} */ next: TableColumn = Object.assign(column, { index: this.columns.length })\n    this.columns.push(next)\n  }\n/**\n * @return {?}\n */\nupdateBodyHeight(): void {\n    const /** @type {?} */ height: number = ElTableFormat.getCSSValue(this.height)\n    const /** @type {?} */ header: HTMLElement = this.headerRef.nativeElement\n    if (!header || !height) return\n    \n    const /** @type {?} */ timer: any = setTimeout(() => {\n      const /** @type {?} */ headerHeight: number = header.offsetHeight\n      if (headerHeight) {\n        this.layout.headerHeight = headerHeight\n        this.layout.bodyHeight = height - this.layout.headerHeight\n        this.layout.scrollBarWidth = this.window.innerWidth - this.document.body.clientWidth\n      }\n      clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @return {?}\n */\nupdateLayout(): void {\n    const /** @type {?} */ elTable: HTMLElement = this.el.nativeElement.children[0]\n    this.layout.bodyWidth = this.widthCount || elTable.clientWidth\n    if (this.widthCount) {\n      this.renderer.setStyle(elTable, 'width', `${this.widthCount}px`)\n    }\n  }\n/**\n * @param {?} widthItem\n * @return {?}\n */\nupdateColumnsWidth(widthItem: WidthItem): void {\n    this.columnsWidth.push(widthItem)\n  }\n/**\n * @param {?} columnsWidth\n * @return {?}\n */\ncomputeColumnsWidth(columnsWidth: WidthItem[]): WidthItem[] {\n    let /** @type {?} */ auto: number = 0, /** @type {?} */ count: number= 0\n    columnsWidth.forEach((item: WidthItem) => {\n      if (item.auto) return auto ++\n      if (Number.isNaN(item.width)) {         // cannot parse values\n        item.auto = true\n        return auto ++\n      }\n      count += item.width\n    })\n    // if user has set the width, use fixed width\n    // update layout\n    if (!auto) {\n      this.widthCount = count\n      this.updateLayout()\n    }\n    \n    const /** @type {?} */ average: number = (this.layout.bodyWidth - count) / auto\n    return columnsWidth.map((item: WidthItem) =>\n      item.auto ? Object.assign(item, { width: average }) : item)\n  }\n/**\n * @return {?}\n */\ntransformColumnsData(): void {\n    // order by deep\n    this.columns = this.columns.map((column: TableColumn) => {\n      if (!Array.isArray(this.columnsWithLevel[column.level])) {\n        this.columnsWithLevel[column.level] = []\n      }\n      this.columnsWithLevel[column.level].push(column)\n      if (column.deep === 0) return column\n      return null\n    }).filter(r => r)\n    this.columnsWithLevel.reverse()\n    this.columnsWidth = this.computeColumnsWidth(this.columnsWidth)\n  \n    // distribution template\n    this.columns = this.columns.map((column: TableColumn) => {\n      if (!column.slot) return column\n      const /** @type {?} */ TEMPLATE_KEY: string = ElTable.GEN_TEMPLATE_KEY()\n      this.modelStorge = this.model.map((v: any) => Object.assign(v, { [TEMPLATE_KEY]: column.slot }))\n      return Object.assign(column, { modelKey: TEMPLATE_KEY })\n    })\n    \n    this.orderMap = this.columns.reduce((pre, next: TableColumn) =>\n      Object.assign(pre, { [next.modelKey]: next }), {})\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\ntransformModelData(): void {\n    const /** @type {?} */ orderMap: OrderMap = this.orderMap\n    // add index, width, value\n    if (!this.modelStorge) {\n      this.modelStorge = this.model\n    }\n    const /** @type {?} */ modelWithIndex: ModelWithIndexDataItem[][] = this.modelStorge.map((row: any) =>\n      Object.keys({ ...row, ...orderMap }).map((v: string | number) => {\n        const /** @type {?} */ item: any = orderMap[v] || {}\n        return {\n          hidden: !item.width,\n          value: row[v], [v]: row[v],\n          index: ~~item.index,\n          width: item.width,\n          _renderHTML: item._renderHTML\n        }\n      })\n      .filter((r: any) => !!r)\n    )\n    // column sort\n    this.columnsData = modelWithIndex.map((row: TableColumnDataItem[]) =>\n      row.sort((pre, next) => pre.index - next.index))\n  \n    this.updateBodyHeight()\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.updateLayout()\n    this.updateBodyHeight()\n    this.globalListenFunc = this.renderer.listen('window', 'resize', () => {\n      this.updateLayout()\n      this.columnsWidth = this.computeColumnsWidth(this.columnsWidth)\n    })\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    // not include model\n    if (!changes || !changes.model) return\n    // first change\n    if (changes.model.isFirstChange()) return\n    this.model = changes.model.currentValue\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    const /** @type {?} */ change = this.differ.diff(this.model)\n    if (!change || !this.orderMap) return\n  \n    // distribution template\n    this.modelStorge = this.model\n    const /** @type {?} */ nextColumns: TableColumn[] = this.columns.map((column: TableColumn) => {\n      if (!column.slot) return column\n      const /** @type {?} */ TEMPLATE_KEY: string = ElTable.GEN_TEMPLATE_KEY()\n      \n      this.modelStorge = this.model.map((v: any) => Object.assign(v, { [TEMPLATE_KEY]: column.slot }))\n      return Object.assign(column, { modelKey: TEMPLATE_KEY })\n    })\n    \n    this.orderMap = nextColumns.reduce((pre, next: TableColumn) =>\n      Object.assign(pre, { [next.modelKey]: next }), {})\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.globalListenFunc && this.globalListenFunc()\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-table',\n  styles: [`\n  .el-table__header-scroll::-webkit-scrollbar { visibility: hidden; }\n  `],\n  template: `\n    <div class=\"el-table\"\n      [ngStyle]=\"{ height: height | cssValue }\"\n      [class.el-table--enable-row-transition]=\"true\"\n      [class.el-table--striped]=\"stripe\"\n      [class.el-table--border]=\"border\"\n      [class.el-table--hidden]=\"false\">\n      <div class=\"hidden-columns\"><ng-content></ng-content></div>\n      <div class=\"el-table__header-wrapper el-table__header-scroll\" [hidden]=\"!showHeader\"\n        [ngStyle]=\"{'overflow-x': (scrollX ? 'auto' : 'hidden')}\" #headerRef>\n        <el-table-header [model]=\"columnsWithLevel\" [layout]=\"layout\" [columns-width]=\"columnsWidth\"\n          [border]=\"border\" [height]=\"height\" [center]=\"center === 'header' || center === 'all'\">\n        </el-table-header>\n      </div>\n      <div class=\"el-table__body-wrapper\" [ngStyle]=\"{ height: layout.bodyHeight | cssValue }\"\n        (scroll)=\"bodyScroll($event)\">\n        <el-table-body [model]=\"columnsData\" [stripe]=\"stripe\"\n          [layout]=\"layout\" [row-class-name]=\"rowClassName\"\n          [center]=\"center === 'all'\"\n          [ngStyle]=\"{ width: layout.bodyWidth + 'px' }\">\n        </el-table-body>\n        <div [ngStyle]=\"{width: layout.bodyWidth + 'px'}\" class=\"el-table__empty-block\" *ngIf=\"!model || model.length === 0\">\n          <span class=\"el-table__empty-text\">{{placeholder}}</span>\n        </div>\n      </div>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DocumentWrapper, },\n{type: WindowWrapper, },\n{type: KeyValueDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headerRef': [{ type: ViewChild, args: ['headerRef', ] },],\n};\n}\n\nfunction ElTable_tsickle_Closure_declarations() {\n/** @type {?} */\nElTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElTable.ctorParameters;\n/** @type {?} */\nElTable.propDecorators;\n/** @type {?} */\nElTable.prototype.headerRef;\n/** @type {?} */\nElTable.prototype.columnsData;\n/** @type {?} */\nElTable.prototype.columnsWithLevel;\n/** @type {?} */\nElTable.prototype.layout;\n/** @type {?} */\nElTable.prototype.columnsWidth;\n/** @type {?} */\nElTable.prototype.columns;\n/** @type {?} */\nElTable.prototype.globalListenFunc;\n/** @type {?} */\nElTable.prototype.orderMap;\n/** @type {?} */\nElTable.prototype.modelStorge;\n/** @type {?} */\nElTable.prototype.differ;\n/** @type {?} */\nElTable.prototype.widthCount;\n/** @type {?} */\nElTable.prototype.el;\n/** @type {?} */\nElTable.prototype.renderer;\n/** @type {?} */\nElTable.prototype.document;\n/** @type {?} */\nElTable.prototype.window;\n/** @type {?} */\nElTable.prototype.differs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}