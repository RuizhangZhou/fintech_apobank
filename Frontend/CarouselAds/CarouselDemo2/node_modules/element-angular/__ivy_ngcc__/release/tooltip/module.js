import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ElTooltip } from './tooltip';
import { ElSharedModule } from '../shared/module';
/**
 * @return {?}
 */
import * as ɵngcc0 from '@angular/core';
export function getWindow() { return window; }
var ElTooltipModule = /** @class */ (function () {
    function ElTooltipModule() {
    }
    /**
     * @return {?}
     */
    ElTooltipModule.forRoot = function () {
        return { ngModule: ElTooltipModule, providers: [] };
    };
    /**
     * @nocollapse
     */
    ElTooltipModule.ctorParameters = function () { return []; };
ElTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ElTooltipModule });
ElTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ElTooltipModule_Factory(t) { return new (t || ElTooltipModule)(); }, imports: [[CommonModule, ElSharedModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ElTooltipModule, { declarations: function () { return [ElTooltip]; }, imports: function () { return [CommonModule, ElSharedModule]; }, exports: function () { return [ElTooltip]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ElTooltipModule, [{
        type: NgModule,
        args: [{
                declarations: [ElTooltip],
                exports: [ElTooltip],
                imports: [CommonModule, ElSharedModule],
                entryComponents: [ElTooltip]
            }]
    }], function () { return []; }, null); })();
    return ElTooltipModule;
}());
export { ElTooltipModule };
function ElTooltipModule_tsickle_Closure_declarations() {
    /** @type {?} */
    ElTooltipModule.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    ElTooltipModule.ctorParameters;
}

//# sourceMappingURL=module.js.map