{"version":3,"file":"badge.js","sources":["../../src/badge/badge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAwB,MAAA,eAAA,CAAA;;;;;;;;;;;;;;;AACnD;AAEiB,IAFjB;AAAqB,QAIlB,WAAM,GAEY,KAAA,CAAA;AAElB,QAHA,UAAK,GAEY,KAAA,CAAA;AAElB,IAoCF,CAAC;AACD,IAxCA;AACA;AAEA,OADG;AACH,IAAA,6BAAG,GAAH;AAAc,QACV,EAAE,CAAC,CAAC,IAAC,CAAI,KAAC,CAAK;AAAC,YAAA,MAAA,CAAO,EAAA,CAAA;AAAC,QACxB,EAAE,CAAC,CAAC,OAAO,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAAC,CAAA;AAAC,YACnC,MAAM,CAAC,IAAA,CAAK,GAAC,GAAK,IAAA,CAAK,KAAC,CAAK,CAAA,CAAE,IAAI,CAAI,GAAC,MAAG,CAAG,CAAA,CAAE,IAAA,CAAK,KAAC,CAAK;AACjE,QAAI,CAAC;AACL,QAAI,MAAM,CAAC,IAAA,CAAK,KAAC,CAAA;AAAC,IAChB,CAAC,CAkBD;IAhBK,JAiBP,IAAA;cAjBO,GAAoC,jBAkB3C;AAEA,OADG;AAlBH,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,sBACvB,QAAQ,xDAkBV,IAFC,sBAAA,GAAA,cAAA,OAAA,EAGA,EAHA,CAGA,CAAC;CAnBU,UAAA,XAoBZ,IAFO,sBAAA,GAAyD;EAjB9D,eAAe,EAAE,nBAiB+C,QAGlE,OAAO,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAlBP,CAAwB,MAAC,sBAC1C,lCAkBuB,QAEzB,KAAK,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;OAlBd,EAAE,TAkBc,QAG1B,QAAQ,EAFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;AAC3B,QAEA,OAZE,EAUO,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE;AACzB,KAEpB;;8IAbE,mBACF,EAAC,EAAG,OACJ;;;;;;;;;;;;;;;;;;;;;;;;;;oBASC;AAAC,IAGH,cAAC;AAED,CA/CA,AA6CC,IAAA;AACD,SA5CC,OAAA;AA6CD;AACA,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,UAAU,CAAC;AACnB,IAAA;AACA;AACI;AAEA,OADD;AACH,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,cAAc,CAAC;AACvB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;AACxB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AACtB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;AACzB,IAAA,gBAAgB;AAChB,IAAA,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;AACxB,CAAC;AACD","sourcesContent":["import { Component, Input, ChangeDetectionStrategy} from '@angular/core';\nexport class ElBadge {\n  \n   model: string | number\n   max: number                // only model is number\n   hidden: boolean = false\n   isDot: boolean = false\n/**\n * @return {?}\n */\nmakeContent(): string | number {\n    if (this.isDot) return ''\n    if (typeof this.model === 'number') {\n      return this.max < this.model ? `${this.max}+` : this.model;\n    }\n    return this.model\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-badge',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"el-badge\">\n      <ng-content></ng-content>\n      <sup *ngIf=\"!hidden && (!!makeContent() || isDot)\"\n        class=\"el-badge__content\"\n        style=\"z-index: 1;\"\n        [class.is-fixed]=\"true\" [class.is-dot]=\"isDot\">\n        {{makeContent()}}\n      </sup>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input },],\n'max': [{ type: Input },],\n'hidden': [{ type: Input },],\n'isDot': [{ type: Input, args: ['is-dot', ] },],\n};\n}\n\nfunction ElBadge_tsickle_Closure_declarations() {\n/** @type {?} */\nElBadge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElBadge.ctorParameters;\n/** @type {?} */\nElBadge.propDecorators;\n/** @type {?} */\nElBadge.prototype.model;\n/** @type {?} */\nElBadge.prototype.max;\n/** @type {?} */\nElBadge.prototype.hidden;\n/** @type {?} */\nElBadge.prototype.isDot;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}